{"/home/travis/build/npmtest/node-npmtest-orchestrate/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-orchestrate/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_orchestrate */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-orchestrate/lib.npmtest_orchestrate.js":{"path":"/home/travis/build/npmtest/node-npmtest-orchestrate/lib.npmtest_orchestrate.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":56}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":62}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_orchestrate */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_orchestrate = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_orchestrate = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-orchestrate/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-orchestrate/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":55}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":69},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-orchestrate && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_orchestrate */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_orchestrate","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_orchestrate.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_orchestrate.rollup.js'] =","            local.assetsDict['/assets.npmtest_orchestrate.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_orchestrate.__dirname +","                    '/lib.npmtest_orchestrate.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}}},"branchMap":{},"code":["// Copyright 2013 Bowery Software, LLC","/**"," * @fileoverview Expose db client."," */","","module.exports = require('./lib/client')",""],"l":{"6":1}},"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/lib/client.js":{"path":"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/lib/client.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":1,"88":0,"89":0,"90":1,"91":0,"92":1,"93":0,"94":1,"95":0,"96":1,"97":0,"98":1,"99":0,"100":1,"101":0,"102":1,"103":0,"104":1,"105":0,"106":1,"107":0,"108":1,"109":0,"110":1,"111":0,"112":1,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"fnMap":{"1":{"name":"Client","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"2":{"name":"(anonymous_2)","line":80,"loc":{"start":{"line":80,"column":23},"end":{"line":80,"column":63}}},"3":{"name":"(anonymous_3)","line":98,"loc":{"start":{"line":98,"column":24},"end":{"line":98,"column":54}}},"4":{"name":"(anonymous_4)","line":113,"loc":{"start":{"line":113,"column":29},"end":{"line":113,"column":64}}},"5":{"name":"(anonymous_5)","line":127,"loc":{"start":{"line":127,"column":24},"end":{"line":127,"column":52}}},"6":{"name":"(anonymous_6)","line":141,"loc":{"start":{"line":141,"column":23},"end":{"line":141,"column":63}}},"7":{"name":"(anonymous_7)","line":164,"loc":{"start":{"line":164,"column":25},"end":{"line":164,"column":67}}},"8":{"name":"(anonymous_8)","line":191,"loc":{"start":{"line":191,"column":25},"end":{"line":191,"column":71}}},"9":{"name":"(anonymous_9)","line":215,"loc":{"start":{"line":215,"column":26},"end":{"line":215,"column":60}}},"10":{"name":"(anonymous_10)","line":228,"loc":{"start":{"line":228,"column":26},"end":{"line":228,"column":64}}},"11":{"name":"(anonymous_11)","line":242,"loc":{"start":{"line":242,"column":43},"end":{"line":242,"column":69}}},"12":{"name":"(anonymous_12)","line":254,"loc":{"start":{"line":254,"column":24},"end":{"line":254,"column":36}}},"13":{"name":"(anonymous_13)","line":264,"loc":{"start":{"line":264,"column":36},"end":{"line":264,"column":58}}},"14":{"name":"(anonymous_14)","line":274,"loc":{"start":{"line":274,"column":36},"end":{"line":274,"column":48}}},"15":{"name":"(anonymous_15)","line":285,"loc":{"start":{"line":285,"column":35},"end":{"line":285,"column":47}}},"16":{"name":"(anonymous_16)","line":296,"loc":{"start":{"line":296,"column":34},"end":{"line":296,"column":46}}},"17":{"name":"(anonymous_17)","line":307,"loc":{"start":{"line":307,"column":35},"end":{"line":307,"column":47}}},"18":{"name":"(anonymous_18)","line":318,"loc":{"start":{"line":318,"column":34},"end":{"line":318,"column":46}}},"19":{"name":"(anonymous_19)","line":328,"loc":{"start":{"line":328,"column":35},"end":{"line":328,"column":61}}},"20":{"name":"(anonymous_20)","line":341,"loc":{"start":{"line":341,"column":24},"end":{"line":341,"column":39}}},"21":{"name":"(anonymous_21)","line":354,"loc":{"start":{"line":354,"column":25},"end":{"line":354,"column":54}}},"22":{"name":"(anonymous_22)","line":367,"loc":{"start":{"line":367,"column":24},"end":{"line":367,"column":53}}},"23":{"name":"(anonymous_23)","line":378,"loc":{"start":{"line":378,"column":24},"end":{"line":378,"column":47}}},"24":{"name":"(anonymous_24)","line":391,"loc":{"start":{"line":391,"column":26},"end":{"line":391,"column":55}}},"25":{"name":"(anonymous_25)","line":401,"loc":{"start":{"line":401,"column":25},"end":{"line":401,"column":40}}},"26":{"name":"(anonymous_26)","line":417,"loc":{"start":{"line":417,"column":28},"end":{"line":417,"column":66}}},"27":{"name":"(anonymous_27)","line":444,"loc":{"start":{"line":444,"column":26},"end":{"line":444,"column":41}}},"28":{"name":"(anonymous_28)","line":454,"loc":{"start":{"line":454,"column":37},"end":{"line":454,"column":52}}},"29":{"name":"(anonymous_29)","line":479,"loc":{"start":{"line":479,"column":31},"end":{"line":479,"column":46}}},"30":{"name":"(anonymous_30)","line":484,"loc":{"start":{"line":484,"column":17},"end":{"line":484,"column":36}}},"31":{"name":"(anonymous_31)","line":498,"loc":{"start":{"line":498,"column":34},"end":{"line":498,"column":49}}},"32":{"name":"(anonymous_32)","line":541,"loc":{"start":{"line":541,"column":34},"end":{"line":541,"column":57}}},"33":{"name":"(anonymous_33)","line":551,"loc":{"start":{"line":551,"column":31},"end":{"line":551,"column":46}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":24}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":22}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":39}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}},"10":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}},"11":{"start":{"line":18,"column":0},"end":{"line":18,"column":38}},"12":{"start":{"line":28,"column":0},"end":{"line":60,"column":1}},"13":{"start":{"line":29,"column":2},"end":{"line":29,"column":37}},"14":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"15":{"start":{"line":31,"column":4},"end":{"line":31,"column":42}},"16":{"start":{"line":38,"column":2},"end":{"line":38,"column":40}},"17":{"start":{"line":45,"column":2},"end":{"line":45,"column":22}},"18":{"start":{"line":52,"column":2},"end":{"line":52,"column":66}},"19":{"start":{"line":59,"column":2},"end":{"line":59,"column":104}},"20":{"start":{"line":62,"column":0},"end":{"line":62,"column":41}},"21":{"start":{"line":64,"column":0},"end":{"line":64,"column":30}},"22":{"start":{"line":70,"column":0},"end":{"line":70,"column":25}},"23":{"start":{"line":80,"column":0},"end":{"line":87,"column":1}},"24":{"start":{"line":81,"column":2},"end":{"line":81,"column":60}},"25":{"start":{"line":82,"column":2},"end":{"line":86,"column":3}},"26":{"start":{"line":83,"column":4},"end":{"line":83,"column":69}},"27":{"start":{"line":85,"column":4},"end":{"line":85,"column":82}},"28":{"start":{"line":98,"column":0},"end":{"line":104,"column":1}},"29":{"start":{"line":99,"column":2},"end":{"line":99,"column":44}},"30":{"start":{"line":100,"column":2},"end":{"line":102,"column":3}},"31":{"start":{"line":101,"column":4},"end":{"line":101,"column":27}},"32":{"start":{"line":103,"column":2},"end":{"line":103,"column":61}},"33":{"start":{"line":113,"column":0},"end":{"line":119,"column":1}},"34":{"start":{"line":114,"column":2},"end":{"line":114,"column":59}},"35":{"start":{"line":115,"column":2},"end":{"line":117,"column":3}},"36":{"start":{"line":116,"column":4},"end":{"line":116,"column":27}},"37":{"start":{"line":118,"column":2},"end":{"line":118,"column":74}},"38":{"start":{"line":127,"column":0},"end":{"line":130,"column":1}},"39":{"start":{"line":128,"column":2},"end":{"line":128,"column":68}},"40":{"start":{"line":129,"column":2},"end":{"line":129,"column":61}},"41":{"start":{"line":141,"column":0},"end":{"line":147,"column":1}},"42":{"start":{"line":142,"column":2},"end":{"line":142,"column":81}},"43":{"start":{"line":143,"column":2},"end":{"line":143,"column":17}},"44":{"start":{"line":144,"column":2},"end":{"line":145,"column":88}},"45":{"start":{"line":144,"column":32},"end":{"line":144,"column":71}},"46":{"start":{"line":145,"column":7},"end":{"line":145,"column":88}},"47":{"start":{"line":145,"column":57},"end":{"line":145,"column":88}},"48":{"start":{"line":146,"column":2},"end":{"line":146,"column":72}},"49":{"start":{"line":164,"column":0},"end":{"line":176,"column":1}},"50":{"start":{"line":165,"column":2},"end":{"line":165,"column":80}},"51":{"start":{"line":166,"column":2},"end":{"line":166,"column":25}},"52":{"start":{"line":167,"column":2},"end":{"line":170,"column":3}},"53":{"start":{"line":169,"column":4},"end":{"line":169,"column":29}},"54":{"start":{"line":171,"column":2},"end":{"line":171,"column":28}},"55":{"start":{"line":172,"column":2},"end":{"line":172,"column":39}},"56":{"start":{"line":173,"column":2},"end":{"line":173,"column":63}},"57":{"start":{"line":174,"column":2},"end":{"line":174,"column":71}},"58":{"start":{"line":174,"column":32},"end":{"line":174,"column":71}},"59":{"start":{"line":175,"column":2},"end":{"line":175,"column":91}},"60":{"start":{"line":191,"column":0},"end":{"line":205,"column":1}},"61":{"start":{"line":192,"column":2},"end":{"line":192,"column":84}},"62":{"start":{"line":193,"column":2},"end":{"line":193,"column":90}},"63":{"start":{"line":195,"column":2},"end":{"line":195,"column":25}},"64":{"start":{"line":196,"column":2},"end":{"line":199,"column":3}},"65":{"start":{"line":198,"column":4},"end":{"line":198,"column":29}},"66":{"start":{"line":200,"column":2},"end":{"line":200,"column":28}},"67":{"start":{"line":201,"column":2},"end":{"line":201,"column":39}},"68":{"start":{"line":202,"column":2},"end":{"line":202,"column":62}},"69":{"start":{"line":203,"column":2},"end":{"line":203,"column":71}},"70":{"start":{"line":203,"column":32},"end":{"line":203,"column":71}},"71":{"start":{"line":204,"column":2},"end":{"line":204,"column":95}},"72":{"start":{"line":215,"column":0},"end":{"line":218,"column":1}},"73":{"start":{"line":216,"column":2},"end":{"line":216,"column":59}},"74":{"start":{"line":217,"column":2},"end":{"line":217,"column":74}},"75":{"start":{"line":228,"column":0},"end":{"line":233,"column":1}},"76":{"start":{"line":229,"column":2},"end":{"line":229,"column":63}},"77":{"start":{"line":230,"column":2},"end":{"line":230,"column":25}},"78":{"start":{"line":231,"column":2},"end":{"line":231,"column":24}},"79":{"start":{"line":232,"column":2},"end":{"line":232,"column":62}},"80":{"start":{"line":242,"column":0},"end":{"line":247,"column":1}},"81":{"start":{"line":243,"column":2},"end":{"line":243,"column":34}},"82":{"start":{"line":244,"column":2},"end":{"line":244,"column":25}},"83":{"start":{"line":245,"column":2},"end":{"line":245,"column":24}},"84":{"start":{"line":246,"column":2},"end":{"line":246,"column":52}},"85":{"start":{"line":254,"column":0},"end":{"line":256,"column":1}},"86":{"start":{"line":255,"column":2},"end":{"line":255,"column":42}},"87":{"start":{"line":264,"column":0},"end":{"line":267,"column":1}},"88":{"start":{"line":265,"column":2},"end":{"line":265,"column":44}},"89":{"start":{"line":266,"column":2},"end":{"line":266,"column":69}},"90":{"start":{"line":274,"column":0},"end":{"line":278,"column":1}},"91":{"start":{"line":275,"column":2},"end":{"line":277,"column":22}},"92":{"start":{"line":285,"column":0},"end":{"line":289,"column":1}},"93":{"start":{"line":286,"column":2},"end":{"line":288,"column":22}},"94":{"start":{"line":296,"column":0},"end":{"line":300,"column":1}},"95":{"start":{"line":297,"column":2},"end":{"line":299,"column":22}},"96":{"start":{"line":307,"column":0},"end":{"line":311,"column":1}},"97":{"start":{"line":308,"column":2},"end":{"line":310,"column":22}},"98":{"start":{"line":318,"column":0},"end":{"line":322,"column":1}},"99":{"start":{"line":319,"column":2},"end":{"line":321,"column":22}},"100":{"start":{"line":328,"column":0},"end":{"line":332,"column":1}},"101":{"start":{"line":329,"column":2},"end":{"line":331,"column":22}},"102":{"start":{"line":341,"column":0},"end":{"line":343,"column":1}},"103":{"start":{"line":342,"column":2},"end":{"line":342,"column":34}},"104":{"start":{"line":354,"column":0},"end":{"line":356,"column":1}},"105":{"start":{"line":355,"column":2},"end":{"line":355,"column":49}},"106":{"start":{"line":367,"column":0},"end":{"line":369,"column":1}},"107":{"start":{"line":368,"column":2},"end":{"line":368,"column":48}},"108":{"start":{"line":378,"column":0},"end":{"line":380,"column":1}},"109":{"start":{"line":379,"column":2},"end":{"line":379,"column":56}},"110":{"start":{"line":391,"column":0},"end":{"line":393,"column":1}},"111":{"start":{"line":392,"column":2},"end":{"line":392,"column":50}},"112":{"start":{"line":401,"column":0},"end":{"line":403,"column":1}},"113":{"start":{"line":402,"column":2},"end":{"line":402,"column":35}},"114":{"start":{"line":417,"column":0},"end":{"line":435,"column":1}},"115":{"start":{"line":418,"column":2},"end":{"line":418,"column":23}},"116":{"start":{"line":419,"column":2},"end":{"line":419,"column":25}},"117":{"start":{"line":420,"column":2},"end":{"line":420,"column":74}},"118":{"start":{"line":420,"column":32},"end":{"line":420,"column":74}},"119":{"start":{"line":421,"column":2},"end":{"line":421,"column":41}},"120":{"start":{"line":422,"column":2},"end":{"line":429,"column":30}},"121":{"start":{"line":431,"column":2},"end":{"line":434,"column":39}},"122":{"start":{"line":444,"column":0},"end":{"line":446,"column":1}},"123":{"start":{"line":445,"column":2},"end":{"line":445,"column":53}},"124":{"start":{"line":454,"column":0},"end":{"line":465,"column":1}},"125":{"start":{"line":455,"column":2},"end":{"line":459,"column":3}},"126":{"start":{"line":456,"column":4},"end":{"line":458,"column":18}},"127":{"start":{"line":457,"column":6},"end":{"line":457,"column":37}},"128":{"start":{"line":461,"column":2},"end":{"line":462,"column":13}},"129":{"start":{"line":462,"column":4},"end":{"line":462,"column":13}},"130":{"start":{"line":464,"column":2},"end":{"line":464,"column":12}},"131":{"start":{"line":479,"column":0},"end":{"line":490,"column":1}},"132":{"start":{"line":480,"column":2},"end":{"line":480,"column":45}},"133":{"start":{"line":481,"column":2},"end":{"line":488,"column":3}},"134":{"start":{"line":482,"column":4},"end":{"line":487,"column":5}},"135":{"start":{"line":483,"column":6},"end":{"line":483,"column":31}},"136":{"start":{"line":484,"column":6},"end":{"line":486,"column":28}},"137":{"start":{"line":485,"column":8},"end":{"line":485,"column":81}},"138":{"start":{"line":489,"column":2},"end":{"line":489,"column":12}},"139":{"start":{"line":498,"column":0},"end":{"line":532,"column":1}},"140":{"start":{"line":499,"column":2},"end":{"line":499,"column":35}},"141":{"start":{"line":500,"column":2},"end":{"line":502,"column":3}},"142":{"start":{"line":501,"column":4},"end":{"line":501,"column":14}},"143":{"start":{"line":504,"column":2},"end":{"line":504,"column":51}},"144":{"start":{"line":505,"column":2},"end":{"line":507,"column":3}},"145":{"start":{"line":506,"column":4},"end":{"line":506,"column":14}},"146":{"start":{"line":509,"column":2},"end":{"line":512,"column":3}},"147":{"start":{"line":514,"column":2},"end":{"line":516,"column":3}},"148":{"start":{"line":515,"column":4},"end":{"line":515,"column":52}},"149":{"start":{"line":518,"column":2},"end":{"line":518,"column":17}},"150":{"start":{"line":520,"column":2},"end":{"line":529,"column":3}},"151":{"start":{"line":521,"column":4},"end":{"line":521,"column":30}},"152":{"start":{"line":522,"column":4},"end":{"line":522,"column":42}},"153":{"start":{"line":528,"column":4},"end":{"line":528,"column":34}},"154":{"start":{"line":531,"column":2},"end":{"line":531,"column":12}},"155":{"start":{"line":541,"column":0},"end":{"line":564,"column":1}},"156":{"start":{"line":542,"column":2},"end":{"line":542,"column":19}},"157":{"start":{"line":544,"column":2},"end":{"line":544,"column":22}},"158":{"start":{"line":544,"column":13},"end":{"line":544,"column":22}},"159":{"start":{"line":546,"column":2},"end":{"line":547,"column":49}},"160":{"start":{"line":547,"column":4},"end":{"line":547,"column":49}},"161":{"start":{"line":550,"column":2},"end":{"line":556,"column":6}},"162":{"start":{"line":551,"column":4},"end":{"line":556,"column":6}},"163":{"start":{"line":552,"column":6},"end":{"line":555,"column":41}},"164":{"start":{"line":553,"column":8},"end":{"line":553,"column":25}},"165":{"start":{"line":554,"column":11},"end":{"line":555,"column":41}},"166":{"start":{"line":555,"column":8},"end":{"line":555,"column":41}},"167":{"start":{"line":558,"column":2},"end":{"line":563,"column":4}},"168":{"start":{"line":568,"column":0},"end":{"line":568,"column":23}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":22},"end":{"line":52,"column":33}},{"start":{"line":52,"column":37},"end":{"line":52,"column":65}}]},"3":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":9},"end":{"line":81,"column":19}},{"start":{"line":81,"column":23},"end":{"line":81,"column":26}}]},"4":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"5":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"6":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":9},"end":{"line":114,"column":19}},{"start":{"line":114,"column":23},"end":{"line":114,"column":26}}]},"7":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"8":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":9},"end":{"line":128,"column":19}},{"start":{"line":128,"column":23},"end":{"line":128,"column":27}}]},"9":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":9},"end":{"line":142,"column":19}},{"start":{"line":142,"column":23},"end":{"line":142,"column":26}},{"start":{"line":142,"column":30},"end":{"line":142,"column":34}}]},"10":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":144,"column":2}},{"start":{"line":144,"column":2},"end":{"line":144,"column":2}}]},"11":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":7},"end":{"line":145,"column":7}},{"start":{"line":145,"column":7},"end":{"line":145,"column":7}}]},"12":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":11},"end":{"line":145,"column":36}},{"start":{"line":145,"column":40},"end":{"line":145,"column":55}}]},"13":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":9},"end":{"line":165,"column":19}},{"start":{"line":165,"column":23},"end":{"line":165,"column":26}},{"start":{"line":165,"column":30},"end":{"line":165,"column":34}}]},"14":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":12},"end":{"line":166,"column":19}},{"start":{"line":166,"column":23},"end":{"line":166,"column":25}}]},"15":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"16":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"17":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":9},"end":{"line":192,"column":19}},{"start":{"line":192,"column":23},"end":{"line":192,"column":26}},{"start":{"line":192,"column":30},"end":{"line":192,"column":38}}]},"18":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":12},"end":{"line":195,"column":19}},{"start":{"line":195,"column":23},"end":{"line":195,"column":25}}]},"19":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":196,"column":2}},{"start":{"line":196,"column":2},"end":{"line":196,"column":2}}]},"20":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":2},"end":{"line":203,"column":2}},{"start":{"line":203,"column":2},"end":{"line":203,"column":2}}]},"21":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":9},"end":{"line":216,"column":19}},{"start":{"line":216,"column":23},"end":{"line":216,"column":26}}]},"22":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":9},"end":{"line":229,"column":19}},{"start":{"line":229,"column":23},"end":{"line":229,"column":28}}]},"23":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":12},"end":{"line":230,"column":19}},{"start":{"line":230,"column":23},"end":{"line":230,"column":25}}]},"24":{"line":244,"type":"binary-expr","locations":[{"start":{"line":244,"column":12},"end":{"line":244,"column":19}},{"start":{"line":244,"column":23},"end":{"line":244,"column":25}}]},"25":{"line":419,"type":"binary-expr","locations":[{"start":{"line":419,"column":12},"end":{"line":419,"column":19}},{"start":{"line":419,"column":23},"end":{"line":419,"column":25}}]},"26":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":2},"end":{"line":420,"column":2}},{"start":{"line":420,"column":2},"end":{"line":420,"column":2}}]},"27":{"line":445,"type":"cond-expr","locations":[{"start":{"line":445,"column":32},"end":{"line":445,"column":35}},{"start":{"line":445,"column":38},"end":{"line":445,"column":53}}]},"28":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":2},"end":{"line":455,"column":2}},{"start":{"line":455,"column":2},"end":{"line":455,"column":2}}]},"29":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":2},"end":{"line":461,"column":2}},{"start":{"line":461,"column":2},"end":{"line":461,"column":2}}]},"30":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":2},"end":{"line":481,"column":2}},{"start":{"line":481,"column":2},"end":{"line":481,"column":2}}]},"31":{"line":500,"type":"if","locations":[{"start":{"line":500,"column":2},"end":{"line":500,"column":2}},{"start":{"line":500,"column":2},"end":{"line":500,"column":2}}]},"32":{"line":500,"type":"binary-expr","locations":[{"start":{"line":500,"column":6},"end":{"line":500,"column":10}},{"start":{"line":500,"column":14},"end":{"line":500,"column":57}}]},"33":{"line":505,"type":"if","locations":[{"start":{"line":505,"column":2},"end":{"line":505,"column":2}},{"start":{"line":505,"column":2},"end":{"line":505,"column":2}}]},"34":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":2},"end":{"line":514,"column":2}},{"start":{"line":514,"column":2},"end":{"line":514,"column":2}}]},"35":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":2},"end":{"line":520,"column":2}},{"start":{"line":520,"column":2},"end":{"line":520,"column":2}}]},"36":{"line":520,"type":"binary-expr","locations":[{"start":{"line":520,"column":6},"end":{"line":520,"column":25}},{"start":{"line":520,"column":29},"end":{"line":520,"column":53}}]},"37":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":2},"end":{"line":544,"column":2}},{"start":{"line":544,"column":2},"end":{"line":544,"column":2}}]},"38":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":2},"end":{"line":550,"column":2}},{"start":{"line":550,"column":2},"end":{"line":550,"column":2}}]},"39":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":6},"end":{"line":552,"column":6}},{"start":{"line":552,"column":6},"end":{"line":552,"column":6}}]},"40":{"line":554,"type":"if","locations":[{"start":{"line":554,"column":11},"end":{"line":554,"column":11}},{"start":{"line":554,"column":11},"end":{"line":554,"column":11}}]}},"code":["// Copyright 2013 Bowery Software, LLC","/**"," * @fileoverview Orchestrate API Client."," */","","","// Module Dependencies.","var request = require('request')","var util = require('util')","var url = require('url')","var Q = require('kew')","var assert = require('assert')","var SearchBuilder = require('./search')","var parseLinks = require('parse-link-header')","var GraphBuilder = require('./graph')","var EventBuilder = require('./event')","var PatchBuilder = require('./patch')","var pjson = require('../package.json')","","/**"," * Creates an instance of Client which can be used to access"," * the Orchestrate API."," *"," * @constructor"," * @param {string} token"," * @param {string} apiEndpoint"," */","function Client (token, apiEndpoint) {","  assert(token, 'API key required.');","  if (!(this instanceof Client)) {","    return new Client(token, apiEndpoint);","  }","","  /**","   * HTTP content-type.","   * @type {string}","   */","  this.contentType = 'application/json';","","  /**","   * API token used for HTTP Authentication.","   * @type {string}","   * @protected","   */","  this._token = token;","","  /**","   * API Endpoint used for connecting to DB.","   * @type {string}","   * @protected","   */","  this._apiEndPoint = apiEndpoint || this.constructor.ApiEndPoint;","","  /**","   * Identifies the orchestrate.js client as the UserAgent to Orchestrate Service.","   * @type {string}","   * @protected","   */","  this._userAgent = 'orchestrate.js/' + pjson.version + ' (Bowery.io; node.js ' + process.version + ')';","}","","Client.ApiEndPoint = 'api.orchestrate.io'","","Client.ApiProtocol = 'https:';","","/**"," * Api version"," * @enum {string}"," */","Client.ApiVersion = 'v0';","","","/**"," * Get data from collection by key-value."," * @param {string} collection"," * @param {string} key"," * @param {object} params KV get params (with_fields,without_fields)"," * @return {Promise}"," */","Client.prototype.get = function (collection, key, ref, params) {","  assert(collection && key, 'Collection and key required.');","  if (!ref) {","    return this._get(this.generateApiUrl([collection, key], params));","  } else {","    return this._get(this.generateApiUrl([collection, key, 'refs', ref], params));","  }","}","","","/**"," * Get list of data from collection."," * @param {string} collection"," * @param {object} params Listing params (startKey,afterKey,beforeKey,endKey,with_fields,without_fields)"," * @param {string} startKey"," * @param {string} endKey"," * @return {Promise}"," */","Client.prototype.list = function (collection, params) {","  assert(collection, 'Collection required.')","  if (typeof params == 'number') { //deprecated, prefer passing map params.","    params = {limit:params}","  }","  return this._get(this.generateApiUrl([collection], params))","}","","","/**"," * Get list of refs associated with a key from a collection."," * @param {string} collection"," * @param {object} params Listing params (limit,offset,values,with_fields,without_fields)"," * @return {Promise}"," */","Client.prototype.list_refs = function (collection, key, params) {","  assert(collection && key, 'Collection and key required.')","  if (typeof params == 'number') { //deprecated, prefer passing map params.","    params = {limit:params}","  }","  return this._get(this.generateApiUrl([collection, key, 'refs'], params))","}","","","/**"," * Insert a key-value, allowing the server to generate a random key"," * @param {string} collection"," * @param {Object} data"," */","Client.prototype.post = function (collection, data) {","  assert(collection && data, 'Collection and JSON object required.')","  return this._post(this.generateApiUrl([collection]), data);","}","","","/**"," * Put data in collection by key-value"," * @param {string} collection"," * @param {string} key"," * @param {Object} data"," * @param {string|boolean} match"," * @return {Promise}"," */","Client.prototype.put = function (collection, key, data, match) {","  assert(collection && key && data, 'Collection, key, and JSON object required.')","  var header = {}","  if (typeof match == 'string') header['If-Match'] = this._quote(match)","  else if (typeof match == 'boolean' && match === false) header['If-None-Match'] = '\"*\"'","  return this._put(this.generateApiUrl([collection, key]), data, header)","}","","","/**"," * Merge a JSON document into an existing key"," * @param {string} collection"," * @param {string} key"," * @param {Object} data"," * @param {Object} options - Map with the following possible entries:"," *       {string} match - the item ref used to check for concurrent update (ie to make"," *               sure the item was not changed and the patch is applying to"," *               the right version of the item)."," *       {boolean} upsert - set to true if this patch should be treated as an"," *               insert when the item is not present."," *"," * @return {Promise}"," */","Client.prototype.merge = function (collection, key, data, options) {","  assert(collection && key && data, 'Collection, key and JSON object required.')","  options = options || {}","  if (typeof options === 'string') {","    // legacy behavior, 4th arg was the 'match' ref string.","    options = {match:options}","  }","  var match = options.match;","  var upsert = options.upsert === true;","  var header = {'Content-Type': 'application/merge-patch+json'}","  if (typeof match == 'string') header['If-Match'] = this._quote(match)","  return this._patch(this.generateApiUrl([collection, key], {upsert:upsert}), data, header)","}","","/**"," * Patch a JSON document using a specific set of operations"," * @param {string} collection"," * @param {string} key"," * @param {[Object]} patchOps array of operations; see http://orchestrate.io/docs/apiref#keyvalue-patch"," * @param {Object} options - Map with the following possible entries:"," *       {string} match - the item ref used to check for concurrent update (ie to make"," *               sure the item was not changed and the patch is applying to"," *               the right version of the item)."," *       {boolean} upsert - set to true if this patch should be treated as an"," *               insert when the item is not present."," * @return {Promise}"," */","Client.prototype.patch = function (collection, key, patchOps, options) {","  assert(collection && key && patchOps, 'Collection, key and JSON object required.')","  assert(patchOps.length > 0, 'At least one operation is required in a patch operation.');","","  options = options || {}","  if (typeof options === 'string') {","    // legacy behavior, 4th arg was the 'match' ref string.","    options = {match:options}","  }","  var match = options.match;","  var upsert = options.upsert === true;","  var header = {'Content-Type': 'application/json-patch+json'}","  if (typeof match == 'string') header['If-Match'] = this._quote(match)","  return this._patch(this.generateApiUrl([collection, key], {upsert:upsert}), patchOps, header)","}","","","/**"," * Remove data from collection by key-value."," * @param {string} collection"," * @param {string} key"," * @param {boolean} purge"," * @return {Promise}"," */","Client.prototype.remove = function (collection, key, purge) {","  assert(collection && key, 'Collection and key required.')","  return this._del(this.generateApiUrl([collection, key], {purge: purge}))","}","","","/**"," * Search collection by key."," * @param {string} collection"," * @param {string} query"," * @param {Object} options (Optional)"," * @return {Promise}"," */","Client.prototype.search = function (collection, query, options) {","  assert(collection && query, 'Collection and query required.')","  options = options || {}","  options.query = query;","  return this._get(this.generateApiUrl([collection], options))","}","","","/**"," * Search across collections by key."," * @param {string} query"," * @param {Object} options (Optional)"," * @return {Promise}"," */","Client.prototype.searchAcrossCollections = function (query, options) {","  assert(query, 'Query required.')","  options = options || {}","  options.query = query;","  return this._get(this.generateApiUrl([], options))","}","","","/**"," * Check if key is valid."," * @return {Promise}"," */","Client.prototype.ping = function () {","  return this._head(this.generateApiUrl())","}","","","/**"," * Delete a collection."," * @param {string} collection"," * @return {Promise}"," */","Client.prototype.deleteCollection = function (collection) {","  assert(collection, 'Collection required.')","  return this._del(this.generateApiUrl([collection]) + '?force=true')","}","","","/**"," * Create new search builder."," * @return {SearchBuilder}"," */","Client.prototype.newSearchBuilder = function () {","  return new SearchBuilder()","    .setWrite(false)","    .setDelegate(this)","}","","","/**"," * Create new graph builder."," * @return {GraphBuilder}"," */","Client.prototype.newGraphBuilder = function () {","  return new GraphBuilder()","    .setWrite(true)","    .setDelegate(this)","}","","","/**"," * Create new graph reader."," * @return {GraphBuilder}"," */","Client.prototype.newGraphReader = function () {","  return new GraphBuilder()","    .setWrite(false)","    .setDelegate(this)","}","","","/**"," * Create new event builder."," * @return {EventBuilder}"," */","Client.prototype.newEventBuilder = function () {","  return new EventBuilder()","    .setWrite(true)","    .setDelegate(this)","}","","","/**"," * Create new event reader."," * @return {EventBuilder}"," */","Client.prototype.newEventReader = function () {","  return new EventBuilder()","    .setWrite(false)","    .setDelegate(this)","}","","/**"," * Create new patch builder."," * @return {PatchBuilder}"," */","Client.prototype.newPatchBuilder = function(collection, key) {","  return new PatchBuilder(collection, key)","    .setWrite(true)","    .setDelegate(this)","}","","","/**"," * GET request with authentication."," * @param {string} url"," * @return {Promise}"," * @protected"," */","Client.prototype._get = function (url) {","  return this._request('GET', url)","}","","","/**"," * POST request with authentication."," * @param {string} url"," * @param {Object} data"," * @param {Object} header"," * @return {Promise}"," * @protected"," */","Client.prototype._post = function (url, data, header) {","  return this._request('POST', url, data, header)","}","","","/**"," * PUT request with authentication."," * @param {string} url"," * @param {Object} data"," * @param {Object} header"," * @return {Promise}"," * @protected"," */","Client.prototype._put = function (url, data, header) {","  return this._request('PUT', url, data, header)","}","","","/**"," * DELETE request with authentication."," * @param {string} url"," * @return {Promise}"," * @protected"," */","Client.prototype._del = function (url, header) {","  return this._request('DELETE', url, undefined, header)","}","","","/**"," * PATCH request with authentication."," * @param {string} url"," * @param {Object} data"," * @param {Object} header"," * @return {Promise}"," * @protected"," */","Client.prototype._patch = function (url, data, header) {","  return this._request('PATCH', url, data, header)","}","","/**"," * HEAD request with authentication."," * @param {string} url"," * @return {Promise}"," * @protected"," */","Client.prototype._head = function (url) {","  return this._request('HEAD', url)","}","","","/**"," * Makes a request to the Orchestrate api.  The request will be set up with all"," * the necessary headers (eg auth, content type, user agent, etc)."," *"," * @param {string} method The HTTP method for the request"," * @param {string} url The full endpoint url (including query portion)."," * @param {Object} data (optional) The body of the request (will be converted to json)."," * @param {Object} header (optional) Any additional headers to go along with the request."," * @return {Promise}"," * @protected"," */","Client.prototype._request = function (method, url, data, headers) {","  var defer = Q.defer()","  headers = headers || {}","  if (!headers['Content-Type']) headers['Content-Type'] = this.contentType","  headers['User-Agent'] = this._userAgent","  request({","    method: method,","    url : url,","    auth: {user: this._token},","    headers: headers,","    body: JSON.stringify(data),","    gzip: true","  }, defer.makeNodeResolver())","","  return defer.promise","  .then(this._validateResponse.bind(this))","  .then(this._parseLinks.bind(this))","  .then(this._parsePathMeta.bind(this))","}","","","/**"," * Quote the provided string if not already quoted."," * @param {string} str"," * @return {string}"," * @protected"," */","Client.prototype._quote = function (str) {","  return str.charAt(0) == '\"' ? str : '\"' + str + '\"'","}","","","/**"," * Ensure valid response."," * @param {Request} req"," * @return {(Request|Promise)}"," */","Client.prototype._validateResponse = function (res) {","  if (res.body) {","    try {","      res.body = JSON.parse(res.body)","    } catch (e) {}","  }","","  if (!~[200, 201, 204].indexOf(res.statusCode))","    throw res","","  return res","}","","/**"," * Parses all links from the \"Link\" http response header. The parsed links"," * are made available on the result as result.links.  Each link is an object"," * with the following properties:"," * url - The url for the link (may be relative)"," * rel - The link header's \"rel\" value (the logical link 'name'),"," * paramName* - Any url query parameters are available directly on the link"," * get() - Function to fetch the link, returns a promise."," * @param {Object} res The response to parse the 'Link' header from"," * @param {Object} res The respons (so this function can be chained in"," *         promise calls)."," */","Client.prototype._parseLinks = function (res) {","  res.links = parseLinks(res.headers['link'])","  if (res.links) {","    for (var rel in res.links) {","      var link = res.links[rel]","      link.get = function (linkUrl) {","        return this._get(Client.ApiProtocol + '//' + this._apiEndPoint + linkUrl)","      }.bind(this, link.url)","    }","  }","  return res","}","","/**"," * Parses any path meta from the response. This includes parsing the Location"," * response header for PUTs and POSTs as well as the ETag response header"," * to parse the item 'ref'. The result path meta will be made available on the"," * response object under 'path'."," */","Client.prototype._parsePathMeta = function (res) {","  var loc = res.headers['location']","  if (!loc || loc.indexOf('/'+Client.ApiVersion+'/') != 0) {","    return res","  }","","  var locParts = res.headers['location'].split('/')","  if (locParts.length < 4) {","    return res","  }","","  var path = {","    collection: locParts[2],","    key: locParts[3]","  }","","  if (res.headers['etag']) {","    path.ref = res.headers['etag'].replace(/\"/g, '')","  }","","  res.path = path","","  if (locParts.length > 7 && locParts[4] === 'events') {","    path['type'] = locParts[5]","    path.timestamp = parseInt(locParts[6])","    // this is the string representation of the Long in this case, and not","    // the hex value. Orchestrate detects the difference, and it is only","    // important that the JS client has a string representation it can use","    // because if used as a raw number, JS will round, changing the value.","    // For this same reason, path.ordinal should never be used in JS.","    path.ordinal_str = locParts[7]","  }","","  return res","}","","","/**"," * Generates and formats api url."," * @param {Array.<string>} path"," * @param {Object} query"," * @return {string}"," */","Client.prototype.generateApiUrl = function (path, query) {","  var pathname = ''","","  if (!path) path = []","","  for (var i = 0; i < path.length; i++)","    pathname += '/' + encodeURIComponent(path[i])","","  // Remove undefined key-value pairs.","  if (query)","    Object.keys(query).forEach(function (key) {","      if (query[key] == undefined)","        delete query[key]","      else if (util.isArray(query[key]))","        query[key] = query[key].join(\",\")","    })","","  return url.format({","    protocol: Client.ApiProtocol,","    host: this._apiEndPoint + '/' + Client.ApiVersion,","    pathname: pathname,","    query: query","  })","}","","","// Module exports.","module.exports = Client",""],"l":{"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"28":1,"29":0,"30":0,"31":0,"38":0,"45":0,"52":0,"59":0,"62":1,"64":1,"70":1,"80":1,"81":0,"82":0,"83":0,"85":0,"98":1,"99":0,"100":0,"101":0,"103":0,"113":1,"114":0,"115":0,"116":0,"118":0,"127":1,"128":0,"129":0,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"164":1,"165":0,"166":0,"167":0,"169":0,"171":0,"172":0,"173":0,"174":0,"175":0,"191":1,"192":0,"193":0,"195":0,"196":0,"198":0,"200":0,"201":0,"202":0,"203":0,"204":0,"215":1,"216":0,"217":0,"228":1,"229":0,"230":0,"231":0,"232":0,"242":1,"243":0,"244":0,"245":0,"246":0,"254":1,"255":0,"264":1,"265":0,"266":0,"274":1,"275":0,"285":1,"286":0,"296":1,"297":0,"307":1,"308":0,"318":1,"319":0,"328":1,"329":0,"341":1,"342":0,"354":1,"355":0,"367":1,"368":0,"378":1,"379":0,"391":1,"392":0,"401":1,"402":0,"417":1,"418":0,"419":0,"420":0,"421":0,"422":0,"431":0,"444":1,"445":0,"454":1,"455":0,"456":0,"457":0,"461":0,"462":0,"464":0,"479":1,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"489":0,"498":1,"499":0,"500":0,"501":0,"504":0,"505":0,"506":0,"509":0,"514":0,"515":0,"518":0,"520":0,"521":0,"522":0,"528":0,"531":0,"541":1,"542":0,"544":0,"546":0,"547":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"558":0,"568":1}},"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/lib/search.js":{"path":"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/lib/search.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":0,"105":0,"106":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"SearchBuilder","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":26}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":37},"end":{"line":28,"column":59}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":32},"end":{"line":40,"column":49}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":33},"end":{"line":52,"column":51}}},"5":{"name":"(anonymous_5)","line":66,"loc":{"start":{"line":66,"column":31},"end":{"line":66,"column":55}}},"6":{"name":"(anonymous_6)","line":83,"loc":{"start":{"line":83,"column":37},"end":{"line":83,"column":58}}},"7":{"name":"(anonymous_7)","line":105,"loc":{"start":{"line":105,"column":33},"end":{"line":105,"column":45}}},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":37},"end":{"line":123,"column":49}}},"9":{"name":"(anonymous_9)","line":140,"loc":{"start":{"line":140,"column":40},"end":{"line":140,"column":52}}},"10":{"name":"(anonymous_10)","line":154,"loc":{"start":{"line":154,"column":36},"end":{"line":154,"column":64}}},"11":{"name":"(anonymous_11)","line":176,"loc":{"start":{"line":176,"column":38},"end":{"line":176,"column":69}}},"12":{"name":"(anonymous_12)","line":192,"loc":{"start":{"line":192,"column":33},"end":{"line":192,"column":49}}},"13":{"name":"(anonymous_13)","line":202,"loc":{"start":{"line":202,"column":33},"end":{"line":202,"column":58}}},"14":{"name":"(anonymous_14)","line":218,"loc":{"start":{"line":218,"column":35},"end":{"line":218,"column":60}}},"15":{"name":"(anonymous_15)","line":242,"loc":{"start":{"line":242,"column":39},"end":{"line":242,"column":71}}},"16":{"name":"(anonymous_16)","line":261,"loc":{"start":{"line":261,"column":33},"end":{"line":261,"column":45}}},"17":{"name":"(anonymous_17)","line":279,"loc":{"start":{"line":279,"column":32},"end":{"line":279,"column":49}}},"18":{"name":"(anonymous_18)","line":291,"loc":{"start":{"line":291,"column":35},"end":{"line":291,"column":53}}},"19":{"name":"(anonymous_19)","line":314,"loc":{"start":{"line":314,"column":40},"end":{"line":314,"column":52}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":48}},"4":{"start":{"line":15,"column":0},"end":{"line":17,"column":1}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":25}},"6":{"start":{"line":19,"column":0},"end":{"line":19,"column":27}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}},"8":{"start":{"line":28,"column":0},"end":{"line":32,"column":1}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":44}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":31}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":13}},"12":{"start":{"line":40,"column":0},"end":{"line":44,"column":1}},"13":{"start":{"line":41,"column":2},"end":{"line":41,"column":34}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":21}},"15":{"start":{"line":43,"column":2},"end":{"line":43,"column":13}},"16":{"start":{"line":52,"column":0},"end":{"line":56,"column":1}},"17":{"start":{"line":53,"column":2},"end":{"line":53,"column":59}},"18":{"start":{"line":54,"column":2},"end":{"line":54,"column":23}},"19":{"start":{"line":55,"column":2},"end":{"line":55,"column":13}},"20":{"start":{"line":66,"column":0},"end":{"line":76,"column":1}},"21":{"start":{"line":67,"column":2},"end":{"line":67,"column":34}},"22":{"start":{"line":68,"column":2},"end":{"line":68,"column":34}},"23":{"start":{"line":69,"column":2},"end":{"line":73,"column":3}},"24":{"start":{"line":72,"column":4},"end":{"line":72,"column":29}},"25":{"start":{"line":74,"column":2},"end":{"line":74,"column":39}},"26":{"start":{"line":75,"column":2},"end":{"line":75,"column":33}},"27":{"start":{"line":83,"column":0},"end":{"line":89,"column":1}},"28":{"start":{"line":84,"column":2},"end":{"line":84,"column":29}},"29":{"start":{"line":85,"column":2},"end":{"line":87,"column":3}},"30":{"start":{"line":86,"column":4},"end":{"line":86,"column":46}},"31":{"start":{"line":88,"column":2},"end":{"line":88,"column":33}},"32":{"start":{"line":105,"column":0},"end":{"line":110,"column":1}},"33":{"start":{"line":106,"column":2},"end":{"line":108,"column":3}},"34":{"start":{"line":107,"column":4},"end":{"line":107,"column":41}},"35":{"start":{"line":109,"column":2},"end":{"line":109,"column":14}},"36":{"start":{"line":123,"column":0},"end":{"line":127,"column":1}},"37":{"start":{"line":124,"column":2},"end":{"line":124,"column":54}},"38":{"start":{"line":125,"column":2},"end":{"line":125,"column":94}},"39":{"start":{"line":126,"column":2},"end":{"line":126,"column":14}},"40":{"start":{"line":140,"column":0},"end":{"line":144,"column":1}},"41":{"start":{"line":141,"column":2},"end":{"line":141,"column":60}},"42":{"start":{"line":142,"column":2},"end":{"line":142,"column":100}},"43":{"start":{"line":143,"column":2},"end":{"line":143,"column":14}},"44":{"start":{"line":154,"column":0},"end":{"line":167,"column":1}},"45":{"start":{"line":155,"column":2},"end":{"line":155,"column":32}},"46":{"start":{"line":156,"column":2},"end":{"line":156,"column":32}},"47":{"start":{"line":157,"column":2},"end":{"line":157,"column":29}},"48":{"start":{"line":158,"column":2},"end":{"line":160,"column":3}},"49":{"start":{"line":159,"column":4},"end":{"line":159,"column":31}},"50":{"start":{"line":161,"column":2},"end":{"line":161,"column":35}},"51":{"start":{"line":162,"column":2},"end":{"line":165,"column":33}},"52":{"start":{"line":163,"column":4},"end":{"line":163,"column":62}},"53":{"start":{"line":165,"column":4},"end":{"line":165,"column":33}},"54":{"start":{"line":166,"column":2},"end":{"line":166,"column":14}},"55":{"start":{"line":176,"column":1},"end":{"line":185,"column":2}},"56":{"start":{"line":177,"column":2},"end":{"line":179,"column":3}},"57":{"start":{"line":178,"column":4},"end":{"line":178,"column":80}},"58":{"start":{"line":180,"column":2},"end":{"line":183,"column":4}},"59":{"start":{"line":184,"column":2},"end":{"line":184,"column":44}},"60":{"start":{"line":192,"column":1},"end":{"line":194,"column":2}},"61":{"start":{"line":193,"column":2},"end":{"line":193,"column":39}},"62":{"start":{"line":202,"column":1},"end":{"line":210,"column":2}},"63":{"start":{"line":203,"column":2},"end":{"line":203,"column":25}},"64":{"start":{"line":204,"column":2},"end":{"line":207,"column":3}},"65":{"start":{"line":205,"column":4},"end":{"line":205,"column":44}},"66":{"start":{"line":206,"column":4},"end":{"line":206,"column":52}},"67":{"start":{"line":206,"column":24},"end":{"line":206,"column":52}},"68":{"start":{"line":209,"column":2},"end":{"line":209,"column":49}},"69":{"start":{"line":218,"column":0},"end":{"line":226,"column":2}},"70":{"start":{"line":219,"column":2},"end":{"line":219,"column":25}},"71":{"start":{"line":220,"column":2},"end":{"line":223,"column":3}},"72":{"start":{"line":221,"column":4},"end":{"line":221,"column":44}},"73":{"start":{"line":222,"column":4},"end":{"line":222,"column":52}},"74":{"start":{"line":222,"column":24},"end":{"line":222,"column":52}},"75":{"start":{"line":225,"column":2},"end":{"line":225,"column":52}},"76":{"start":{"line":242,"column":1},"end":{"line":248,"column":2}},"77":{"start":{"line":243,"column":2},"end":{"line":247,"column":3}},"78":{"start":{"line":244,"column":4},"end":{"line":244,"column":53}},"79":{"start":{"line":246,"column":4},"end":{"line":246,"column":67}},"80":{"start":{"line":261,"column":1},"end":{"line":271,"column":1}},"81":{"start":{"line":262,"column":3},"end":{"line":262,"column":17}},"82":{"start":{"line":263,"column":3},"end":{"line":263,"column":62}},"83":{"start":{"line":264,"column":3},"end":{"line":268,"column":4}},"84":{"start":{"line":265,"column":5},"end":{"line":265,"column":28}},"85":{"start":{"line":266,"column":5},"end":{"line":266,"column":123}},"86":{"start":{"line":267,"column":5},"end":{"line":267,"column":21}},"87":{"start":{"line":269,"column":3},"end":{"line":269,"column":22}},"88":{"start":{"line":270,"column":3},"end":{"line":270,"column":14}},"89":{"start":{"line":279,"column":0},"end":{"line":283,"column":1}},"90":{"start":{"line":280,"column":2},"end":{"line":280,"column":34}},"91":{"start":{"line":281,"column":2},"end":{"line":281,"column":21}},"92":{"start":{"line":282,"column":2},"end":{"line":282,"column":29}},"93":{"start":{"line":291,"column":0},"end":{"line":312,"column":1}},"94":{"start":{"line":292,"column":2},"end":{"line":292,"column":40}},"95":{"start":{"line":293,"column":2},"end":{"line":293,"column":19}},"96":{"start":{"line":294,"column":2},"end":{"line":296,"column":3}},"97":{"start":{"line":295,"column":4},"end":{"line":295,"column":36}},"98":{"start":{"line":297,"column":2},"end":{"line":297,"column":25}},"99":{"start":{"line":298,"column":2},"end":{"line":300,"column":3}},"100":{"start":{"line":299,"column":4},"end":{"line":299,"column":78}},"101":{"start":{"line":301,"column":2},"end":{"line":309,"column":4}},"102":{"start":{"line":311,"column":2},"end":{"line":311,"column":46}},"103":{"start":{"line":314,"column":0},"end":{"line":318,"column":1}},"104":{"start":{"line":315,"column":2},"end":{"line":317,"column":3}},"105":{"start":{"line":316,"column":4},"end":{"line":316,"column":39}},"106":{"start":{"line":323,"column":0},"end":{"line":323,"column":30}}},"branchMap":{"1":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"2":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"3":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":26},"end":{"line":124,"column":47}},{"start":{"line":124,"column":51},"end":{"line":124,"column":53}}]},"4":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":29},"end":{"line":141,"column":53}},{"start":{"line":141,"column":57},"end":{"line":141,"column":59}}]},"5":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"6":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":6},"end":{"line":158,"column":31}},{"start":{"line":158,"column":35},"end":{"line":158,"column":53}}]},"7":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"8":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"9":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":6},"end":{"line":177,"column":36}},{"start":{"line":177,"column":40},"end":{"line":177,"column":69}}]},"10":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":34}},{"start":{"line":181,"column":38},"end":{"line":181,"column":67}}]},"11":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":204,"column":2}},{"start":{"line":204,"column":2},"end":{"line":204,"column":2}}]},"12":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":206,"column":4}},{"start":{"line":206,"column":4},"end":{"line":206,"column":4}}]},"13":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":2},"end":{"line":220,"column":2}},{"start":{"line":220,"column":2},"end":{"line":220,"column":2}}]},"14":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"15":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":2},"end":{"line":243,"column":2}},{"start":{"line":243,"column":2},"end":{"line":243,"column":2}}]},"16":{"line":266,"type":"binary-expr","locations":[{"start":{"line":266,"column":12},"end":{"line":266,"column":28}},{"start":{"line":266,"column":32},"end":{"line":266,"column":47}},{"start":{"line":266,"column":51},"end":{"line":266,"column":74}}]},"17":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":2},"end":{"line":294,"column":2}},{"start":{"line":294,"column":2},"end":{"line":294,"column":2}}]},"18":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":2},"end":{"line":298,"column":2}},{"start":{"line":298,"column":2},"end":{"line":298,"column":2}}]},"19":{"line":301,"type":"binary-expr","locations":[{"start":{"line":301,"column":12},"end":{"line":301,"column":30}},{"start":{"line":301,"column":34},"end":{"line":309,"column":4}}]},"20":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":2},"end":{"line":315,"column":2}},{"start":{"line":315,"column":2},"end":{"line":315,"column":2}}]}},"code":["// Copyright 2013 Bowery Software, LLC","/**"," * @fileoverview Search builder."," */","","","// Module Dependencies.","var assert = require('assert')","var Builder = require('./builder')","var BucketBuilder = require('./bucket_builder');","","/**"," * @constructor"," */","function SearchBuilder () {","  this._sortClauses = [];","}","","var util = require('util');","util.inherits(SearchBuilder, Builder)","","","/**"," * Set collection."," * @param {string} collection"," * @return {SearchBuilder}"," */","SearchBuilder.prototype.collection = function (collection) {","  assert(collection, 'Collection required.')","  this._collection = collection","  return this","}","","","/**"," * Set limit."," * @param {number} limit"," * @return {SearchBuilder}"," */","SearchBuilder.prototype.limit = function (limit) {","  assert(limit, 'Limit required.')","  this._limit = limit","  return this","}","","","/**"," * Set offset."," * @param {number} offset"," * @return {SearchBuilder}"," */","SearchBuilder.prototype.offset = function (offset) {","  assert.equal(typeof offset, 'number', 'Offset required.')","  this._offset = offset","  return this","}","","","/**"," * Set sort."," * @param {string} field"," * @param {string} order"," * @return {SearchBuilder}"," * @deprecated Use sortBy() with fully qualified field names."," */","SearchBuilder.prototype.sort = function (field, order) {","  assert(field, 'field required');","  assert(order, 'order required');","  if (field.indexOf('@path.') != 0) {","    // TODO we should NOT be doing this default prefixing!","    // removing will be a breaking change.","    field = 'value.' + field;","  }","  var sortClause = field + ':' + order;","  return this.sortBy(sortClause);","}","","/**"," * Add random sort clause with an optional seed value."," * @param {string=} seedValue Seed to use for random sorting (optional)."," * @return {SearchBuilder}"," */","SearchBuilder.prototype.sortRandom = function (seedValue) {","  var sortClause = \"_random\";","  if (typeof(seedValue) !== \"undefined\") {","    sortClause = sortClause + \":\" + seedValue;","  }","  return this.sortBy(sortClause);","}","","/**"," * Add sort clauses."," * @example"," * // adds a sort clause for the field value.age"," * searchBuilder.sortBy('value.age');"," * @example"," * // adds two sorts clauses for the field value.age and @path.key"," * searchBuilder.sortBy('value.age', '@path.key');"," * @example"," * // adds a sort clause for the field value.age in ascending order"," * searchBuilder.sortBy('value.age:asc');"," * @param {...string} sortClauses Sort clauses to add to the request."," * @return {SearchBuilder}"," */","SearchBuilder.prototype.sortBy = function () {","  for(var i = 0; i < arguments.length; ++i) {","    this._sortClauses.push(arguments[i]);","  }","  return this;","}","","/**"," * Enable field-filtering, with a whitelist of field names"," * @example"," * // adds a whitelist field-filter for the field value.age"," * searchBuilder.withFields('value.age');"," * @example"," * // adds two whitelist field-filters, for the fields value.name and value.age"," * searchBuilder.withFields('value.name', 'value.age');"," * @param {...string} fieldNames Fully-qualified field names to use as whitelist field-filters"," * @return {SearchBuilder}"," */","SearchBuilder.prototype.withFields = function () {","  this.filterWithFields = this.filterWithFields || [];","  this.filterWithFields = this.filterWithFields.concat(Array.prototype.slice.call(arguments));","  return this;","}","","/**"," * Enable field-filtering, with a blacklist of field names"," * @example"," * // adds a blacklist field-filter for the field value.age"," * searchBuilder.withoutFields('value.age');"," * @example"," * // adds two blacklist field-filters, for the fields value.name and value.age"," * searchBuilder.withoutFields('value.name', 'value.age');"," * @param {...string} fieldNames Fully-qualified field names to use as blacklist field-filters"," * @return {SearchBuilder}"," */","SearchBuilder.prototype.withoutFields = function () {","  this.filterWithoutFields = this.filterWithoutFields || [];","  this.filterWithoutFields = this.filterWithoutFields.concat(Array.prototype.slice.call(arguments));","  return this;","}","","","/**"," * Add new aggregate parameter."," * @param {string} type"," * @param {string} path"," * @param {array} args"," * @return {SearchBuilder}"," */","SearchBuilder.prototype.aggregate = function (type, path, args) {","  assert(type, 'type required');","  assert(path, 'path required');","  var parts = [ path, type ];","  if (typeof(args) === \"string\" || util.isArray(args)) {","    parts = parts.concat(args);","  }","  var _aggregate = parts.join(':');","  if (this._aggregate)","    this._aggregate = [this._aggregate, _aggregate].join(',');","  else","    this._aggregate = _aggregate;","  return this;","}","","/**"," * Add new 'top_values' aggregate parameter."," * @param {string} path"," * @param {number} offset"," * @param {number} limit"," * @return {SearchBuilder}"," */"," SearchBuilder.prototype.top_values = function (path, offset, limit) {","  if (typeof(offset) !== \"undefined\" && typeof(limit) !== \"undefined\") {","    return this.aggregate('top_values', path, \"offset\", offset, \"limit\", limit);","  }","  assert(","    typeof(offset) === \"undefined\" && typeof(limit) === \"undefined\",","    \"offset or limit params must be included together, or not at all\"","  );","  return this.aggregate('top_values', path);"," }","","/**"," * Add new 'stats' aggregate parameter."," * @param {string} path"," * @return {SearchBuilder}"," */"," SearchBuilder.prototype.stats = function (path) {","  return this.aggregate('stats', path);"," }",""," /**"," * Add new 'range' aggregate parameter."," * @param {string} path"," * @param {array|function} buckets"," * @return {SearchBuilder}"," */"," SearchBuilder.prototype.range = function (path, buckets) {","  var _buckets = buckets;","  if (typeof(buckets) === 'function') {","    _buckets = buckets(new BucketBuilder());","    if (_buckets.build) _buckets = _buckets.build();","  }","","  return this.aggregate('range', path, _buckets);"," }",""," /**"," * Add new 'distance' aggregate parameter."," * @param {string} path"," * @param {array|function} buckets"," * @return {SearchBuilder}"," */","SearchBuilder.prototype.distance = function (path, buckets) {","  var _buckets = buckets;","  if (typeof(buckets) === 'function') {","    _buckets = buckets(new BucketBuilder());","    if (_buckets.build) _buckets = _buckets.build();","  }","","  return this.aggregate('distance', path, _buckets);"," }",""," /**"," * Add new 'time_series' aggregate parameter. The 'time' param, which must be"," * one of ('year', 'quarter', 'month', 'week', 'day', or 'hour'), determines"," * the bucketing interval for the time-series. The optional timezone param,"," * if present, must begin with a \"+\" or \"-\" character, followed by four digits"," * representing the hours and minutes of offset, relative to UTC. For example,"," * Eastern Standard Time (EST) would be represented as \"-0500\", since the time"," * in EST is five hours behind that of UTC."," *"," * @param {string} path"," * @param {string} time"," * @param {string} timezone"," * @return {SearchBuilder}"," */"," SearchBuilder.prototype.time_series = function (path, time, timezone) {","  if (typeof(timezone) === \"undefined\") {","    return this.aggregate('time_series', path, time);","  } else {","    return this.aggregate('time_series', path, [ time, timezone ]);","  }"," }",""," /**","  * Sets the 'kind' to search. Currently, Orchestrate defaults to","  * searching only kv 'item's in the collection. To search only","  * 'event' objects in the collection:","  * searchBuilder.kinds('event')","  * To search both 'event' and 'item' kinds, call with both:","  * searchBuilder.kinds('item', 'event')","  *","  * @param {string} The Orchestrate 'kind' to be included ('item' or 'event').","  * @return {SearchBuilder}","  */"," SearchBuilder.prototype.kinds = function () {","   var kinds = []","   assert(arguments.length > 0, 'At least one kind required.')","   for (var i=0; i<arguments.length; i++) {","     var kind = arguments[i]","     assert(kind === 'event' || kind === 'item' || kind === 'relationship', \"'item', 'event', or 'relationship' required.\")","     kinds.push(kind)","   }","   this._kinds = kinds","   return this","}","","/**"," * Set query and send the search request to Orchestrate."," *"," * @param {string} query"," * @return {SearchBuilder}"," */","SearchBuilder.prototype.query = function (query) {","  assert(query, 'Query required.')","  this._query = query","  return this._execute('get')","}","","","/**"," * Execute search."," * @return {Object}"," * @protected"," */","SearchBuilder.prototype._execute = function (method) {","  assert(this._query, 'Query required.')","  var pathArgs = []","  if (this._collection) {","    pathArgs.push(this._collection);","  }","  var query = this._query","  if (this._kinds) {","    query = '@path.kind:('+this._kinds.join(' ')+') AND (' + this._query + ')'","  }","  var url = this.getDelegate() && this.getDelegate().generateApiUrl(pathArgs, {","    query: query,","    limit: this._limit,","    offset: this._offset,","    sort: this._generateSort(),","    aggregate: this._aggregate,","    with_fields: this.filterWithFields,","    without_fields: this.filterWithoutFields","  })","","  return this.getDelegate()['_' + method](url)","}","","SearchBuilder.prototype._generateSort = function () {","  if (this._sortClauses.length > 0) {","    return this._sortClauses.join(\",\");","  }","}","","","","// Module Exports.","module.exports = SearchBuilder",""],"l":{"8":1,"9":1,"10":1,"15":1,"16":0,"19":1,"20":1,"28":1,"29":0,"30":0,"31":0,"40":1,"41":0,"42":0,"43":0,"52":1,"53":0,"54":0,"55":0,"66":1,"67":0,"68":0,"69":0,"72":0,"74":0,"75":0,"83":1,"84":0,"85":0,"86":0,"88":0,"105":1,"106":0,"107":0,"109":0,"123":1,"124":0,"125":0,"126":0,"140":1,"141":0,"142":0,"143":0,"154":1,"155":0,"156":0,"157":0,"158":0,"159":0,"161":0,"162":0,"163":0,"165":0,"166":0,"176":1,"177":0,"178":0,"180":0,"184":0,"192":1,"193":0,"202":1,"203":0,"204":0,"205":0,"206":0,"209":0,"218":1,"219":0,"220":0,"221":0,"222":0,"225":0,"242":1,"243":0,"244":0,"246":0,"261":1,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"269":0,"270":0,"279":1,"280":0,"281":0,"282":0,"291":1,"292":0,"293":0,"294":0,"295":0,"297":0,"298":0,"299":0,"301":0,"311":0,"314":1,"315":0,"316":0,"323":1}},"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/lib/builder.js":{"path":"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/lib/builder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":1,"8":0,"9":0,"10":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"Builder","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":20}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":32},"end":{"line":16,"column":52}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":32},"end":{"line":26,"column":44}}},"4":{"name":"(anonymous_4)","line":36,"loc":{"start":{"line":36,"column":29},"end":{"line":36,"column":46}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":22}},"2":{"start":{"line":16,"column":0},"end":{"line":19,"column":1}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":26}},"4":{"start":{"line":18,"column":2},"end":{"line":18,"column":13}},"5":{"start":{"line":26,"column":0},"end":{"line":28,"column":1}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":22}},"7":{"start":{"line":36,"column":0},"end":{"line":39,"column":1}},"8":{"start":{"line":37,"column":2},"end":{"line":37,"column":20}},"9":{"start":{"line":38,"column":2},"end":{"line":38,"column":13}},"10":{"start":{"line":43,"column":0},"end":{"line":43,"column":24}}},"branchMap":{},"code":["// Copyright 2013 Bowery Software, LLC","/**"," * @fileoverview Builder class. Defines methods used across"," * other builders."," */","","","function Builder () {}","","","/**"," * Set delegate."," * @param {Client} delegate"," * @return {Builder}"," */","Builder.prototype.setDelegate = function (delegate) {","  this.delegate = delegate","  return this","}","","","/**"," * Get delegate."," * @return {Builder}"," */","Builder.prototype.getDelegate = function () {","  return this.delegate","}","","","/**"," * Set write boolean."," * @param {boolean} write"," * @return {Builder}"," */","Builder.prototype.setWrite = function (write) {","  this.write = write","  return this","}","","","// Module Exports.","module.exports = Builder",""],"l":{"8":1,"16":1,"17":0,"18":0,"26":1,"27":0,"36":1,"37":0,"38":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/lib/bucket_builder.js":{"path":"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/lib/bucket_builder.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":1,"13":0,"14":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"BucketBuilder","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":33},"end":{"line":8,"column":46}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":34},"end":{"line":13,"column":50}}},"4":{"name":"(anonymous_4)","line":18,"loc":{"start":{"line":18,"column":32},"end":{"line":18,"column":45}}},"5":{"name":"(anonymous_5)","line":23,"loc":{"start":{"line":23,"column":32},"end":{"line":23,"column":44}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":6,"column":1}},"2":{"start":{"line":5,"column":2},"end":{"line":5,"column":20}},"3":{"start":{"line":8,"column":0},"end":{"line":11,"column":2}},"4":{"start":{"line":9,"column":2},"end":{"line":9,"column":30}},"5":{"start":{"line":10,"column":2},"end":{"line":10,"column":14}},"6":{"start":{"line":13,"column":0},"end":{"line":16,"column":2}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":38}},"8":{"start":{"line":15,"column":2},"end":{"line":15,"column":14}},"9":{"start":{"line":18,"column":0},"end":{"line":21,"column":2}},"10":{"start":{"line":19,"column":2},"end":{"line":19,"column":30}},"11":{"start":{"line":20,"column":2},"end":{"line":20,"column":14}},"12":{"start":{"line":23,"column":0},"end":{"line":25,"column":1}},"13":{"start":{"line":24,"column":2},"end":{"line":24,"column":32}},"14":{"start":{"line":27,"column":0},"end":{"line":27,"column":31}}},"branchMap":{},"code":["// Copyright 2015 Orchestrate","","","function BucketBuilder () {","  this.buckets = [];","}","","BucketBuilder.prototype.before = function (a) {","  this.buckets.push('*~' + a);","  return this;","};","","BucketBuilder.prototype.between = function (a, b) {","  this.buckets.push([a, b].join('~'));","  return this;","};","","BucketBuilder.prototype.after = function (a) {","  this.buckets.push(a + '~*');","  return this;","};","","BucketBuilder.prototype.build = function () {","  return this.buckets.join(':');","}","","module.exports = BucketBuilder;",""],"l":{"4":1,"5":0,"8":1,"9":0,"10":0,"13":1,"14":0,"15":0,"18":1,"19":0,"20":0,"23":1,"24":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/lib/graph.js":{"path":"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/lib/graph.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":1,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"GraphBuilder","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":25}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":29},"end":{"line":26,"column":41}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":32},"end":{"line":36,"column":44}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":30},"end":{"line":47,"column":46}}},"5":{"name":"(anonymous_5)","line":60,"loc":{"start":{"line":60,"column":29},"end":{"line":60,"column":44}}},"6":{"name":"(anonymous_6)","line":71,"loc":{"start":{"line":71,"column":32},"end":{"line":71,"column":44}}},"7":{"name":"(anonymous_7)","line":83,"loc":{"start":{"line":83,"column":30},"end":{"line":83,"column":57}}},"8":{"name":"(anonymous_8)","line":101,"loc":{"start":{"line":101,"column":36},"end":{"line":101,"column":48}}},"9":{"name":"(anonymous_9)","line":118,"loc":{"start":{"line":118,"column":39},"end":{"line":118,"column":51}}},"10":{"name":"(anonymous_10)","line":130,"loc":{"start":{"line":130,"column":33},"end":{"line":130,"column":49}}},"11":{"name":"(anonymous_11)","line":169,"loc":{"start":{"line":169,"column":28},"end":{"line":169,"column":59}}},"12":{"name":"(anonymous_12)","line":188,"loc":{"start":{"line":188,"column":31},"end":{"line":188,"column":48}}},"13":{"name":"(anonymous_13)","line":200,"loc":{"start":{"line":200,"column":32},"end":{"line":200,"column":50}}},"14":{"name":"(anonymous_14)","line":213,"loc":{"start":{"line":213,"column":32},"end":{"line":213,"column":47}}},"15":{"name":"(anonymous_15)","line":224,"loc":{"start":{"line":224,"column":34},"end":{"line":224,"column":52}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":27}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":36}},"6":{"start":{"line":26,"column":0},"end":{"line":29,"column":1}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":22}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":13}},"9":{"start":{"line":36,"column":0},"end":{"line":39,"column":1}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":22}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":13}},"12":{"start":{"line":47,"column":0},"end":{"line":51,"column":1}},"13":{"start":{"line":48,"column":2},"end":{"line":48,"column":32}},"14":{"start":{"line":49,"column":2},"end":{"line":49,"column":18}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":13}},"16":{"start":{"line":60,"column":0},"end":{"line":64,"column":1}},"17":{"start":{"line":61,"column":2},"end":{"line":61,"column":78}},"18":{"start":{"line":62,"column":2},"end":{"line":62,"column":16}},"19":{"start":{"line":63,"column":2},"end":{"line":63,"column":13}},"20":{"start":{"line":71,"column":0},"end":{"line":74,"column":1}},"21":{"start":{"line":72,"column":2},"end":{"line":72,"column":22}},"22":{"start":{"line":73,"column":2},"end":{"line":73,"column":13}},"23":{"start":{"line":83,"column":0},"end":{"line":88,"column":1}},"24":{"start":{"line":84,"column":2},"end":{"line":84,"column":59}},"25":{"start":{"line":85,"column":2},"end":{"line":85,"column":30}},"26":{"start":{"line":86,"column":2},"end":{"line":86,"column":16}},"27":{"start":{"line":87,"column":2},"end":{"line":87,"column":13}},"28":{"start":{"line":101,"column":0},"end":{"line":105,"column":1}},"29":{"start":{"line":102,"column":2},"end":{"line":102,"column":54}},"30":{"start":{"line":103,"column":2},"end":{"line":103,"column":94}},"31":{"start":{"line":104,"column":2},"end":{"line":104,"column":14}},"32":{"start":{"line":118,"column":0},"end":{"line":122,"column":1}},"33":{"start":{"line":119,"column":2},"end":{"line":119,"column":60}},"34":{"start":{"line":120,"column":2},"end":{"line":120,"column":100}},"35":{"start":{"line":121,"column":2},"end":{"line":121,"column":14}},"36":{"start":{"line":130,"column":0},"end":{"line":160,"column":1}},"37":{"start":{"line":131,"column":2},"end":{"line":131,"column":44}},"38":{"start":{"line":134,"column":2},"end":{"line":138,"column":3}},"39":{"start":{"line":135,"column":4},"end":{"line":135,"column":21}},"40":{"start":{"line":137,"column":4},"end":{"line":137,"column":56}},"41":{"start":{"line":141,"column":2},"end":{"line":141,"column":60}},"42":{"start":{"line":142,"column":2},"end":{"line":145,"column":3}},"43":{"start":{"line":143,"column":4},"end":{"line":143,"column":25}},"44":{"start":{"line":144,"column":4},"end":{"line":144,"column":85}},"45":{"start":{"line":154,"column":2},"end":{"line":156,"column":3}},"46":{"start":{"line":155,"column":4},"end":{"line":155,"column":38}},"47":{"start":{"line":159,"column":2},"end":{"line":159,"column":13}},"48":{"start":{"line":169,"column":0},"end":{"line":180,"column":1}},"49":{"start":{"line":170,"column":2},"end":{"line":170,"column":67}},"50":{"start":{"line":171,"column":2},"end":{"line":171,"column":34}},"51":{"start":{"line":172,"column":2},"end":{"line":172,"column":20}},"52":{"start":{"line":176,"column":2},"end":{"line":178,"column":3}},"53":{"start":{"line":177,"column":4},"end":{"line":177,"column":38}},"54":{"start":{"line":179,"column":2},"end":{"line":179,"column":13}},"55":{"start":{"line":188,"column":0},"end":{"line":192,"column":1}},"56":{"start":{"line":189,"column":2},"end":{"line":189,"column":48}},"57":{"start":{"line":190,"column":2},"end":{"line":190,"column":26}},"58":{"start":{"line":191,"column":2},"end":{"line":191,"column":13}},"59":{"start":{"line":200,"column":0},"end":{"line":204,"column":1}},"60":{"start":{"line":201,"column":2},"end":{"line":201,"column":59}},"61":{"start":{"line":202,"column":2},"end":{"line":202,"column":28}},"62":{"start":{"line":203,"column":2},"end":{"line":203,"column":13}},"63":{"start":{"line":213,"column":0},"end":{"line":215,"column":1}},"64":{"start":{"line":214,"column":2},"end":{"line":214,"column":53}},"65":{"start":{"line":224,"column":0},"end":{"line":271,"column":1}},"66":{"start":{"line":226,"column":2},"end":{"line":226,"column":76}},"67":{"start":{"line":229,"column":2},"end":{"line":229,"column":73}},"68":{"start":{"line":230,"column":2},"end":{"line":233,"column":3}},"69":{"start":{"line":231,"column":4},"end":{"line":231,"column":25}},"70":{"start":{"line":232,"column":4},"end":{"line":232,"column":85}},"71":{"start":{"line":236,"column":2},"end":{"line":236,"column":19}},"72":{"start":{"line":237,"column":2},"end":{"line":237,"column":32}},"73":{"start":{"line":238,"column":2},"end":{"line":238,"column":25}},"74":{"start":{"line":241,"column":2},"end":{"line":245,"column":3}},"75":{"start":{"line":242,"column":4},"end":{"line":242,"column":29}},"76":{"start":{"line":244,"column":4},"end":{"line":244,"column":30}},"77":{"start":{"line":246,"column":2},"end":{"line":246,"column":39}},"78":{"start":{"line":249,"column":2},"end":{"line":249,"column":57}},"79":{"start":{"line":249,"column":25},"end":{"line":249,"column":57}},"80":{"start":{"line":250,"column":2},"end":{"line":250,"column":43}},"81":{"start":{"line":250,"column":18},"end":{"line":250,"column":43}},"82":{"start":{"line":253,"column":2},"end":{"line":253,"column":16}},"83":{"start":{"line":254,"column":2},"end":{"line":254,"column":50}},"84":{"start":{"line":254,"column":29},"end":{"line":254,"column":50}},"85":{"start":{"line":255,"column":2},"end":{"line":255,"column":62}},"86":{"start":{"line":255,"column":29},"end":{"line":255,"column":62}},"87":{"start":{"line":256,"column":2},"end":{"line":256,"column":64}},"88":{"start":{"line":256,"column":29},"end":{"line":256,"column":64}},"89":{"start":{"line":257,"column":2},"end":{"line":257,"column":78}},"90":{"start":{"line":257,"column":34},"end":{"line":257,"column":78}},"91":{"start":{"line":258,"column":2},"end":{"line":258,"column":84}},"92":{"start":{"line":258,"column":34},"end":{"line":258,"column":84}},"93":{"start":{"line":261,"column":2},"end":{"line":261,"column":17}},"94":{"start":{"line":262,"column":2},"end":{"line":266,"column":3}},"95":{"start":{"line":263,"column":4},"end":{"line":263,"column":46}},"96":{"start":{"line":264,"column":9},"end":{"line":266,"column":3}},"97":{"start":{"line":265,"column":4},"end":{"line":265,"column":35}},"98":{"start":{"line":269,"column":2},"end":{"line":269,"column":84}},"99":{"start":{"line":270,"column":2},"end":{"line":270,"column":71}},"100":{"start":{"line":275,"column":0},"end":{"line":275,"column":29}}},"branchMap":{"1":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":9},"end":{"line":61,"column":32}},{"start":{"line":61,"column":36},"end":{"line":61,"column":60}}]},"2":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":9},"end":{"line":84,"column":19}},{"start":{"line":84,"column":23},"end":{"line":84,"column":26}}]},"3":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":26},"end":{"line":102,"column":47}},{"start":{"line":102,"column":51},"end":{"line":102,"column":53}}]},"4":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":29},"end":{"line":119,"column":53}},{"start":{"line":119,"column":57},"end":{"line":119,"column":59}}]},"5":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"6":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":11},"end":{"line":144,"column":33}},{"start":{"line":144,"column":37},"end":{"line":144,"column":49}}]},"7":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]},"8":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":6},"end":{"line":154,"column":17}},{"start":{"line":154,"column":22},"end":{"line":154,"column":39}},{"start":{"line":154,"column":43},"end":{"line":154,"column":53}}]},"9":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":9},"end":{"line":170,"column":21}},{"start":{"line":170,"column":25},"end":{"line":170,"column":30}}]},"10":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"11":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":9},"end":{"line":189,"column":14}},{"start":{"line":189,"column":18},"end":{"line":189,"column":28}}]},"12":{"line":214,"type":"cond-expr","locations":[{"start":{"line":214,"column":32},"end":{"line":214,"column":35}},{"start":{"line":214,"column":38},"end":{"line":214,"column":53}}]},"13":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":9},"end":{"line":226,"column":24}},{"start":{"line":226,"column":28},"end":{"line":226,"column":36}}]},"14":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":9},"end":{"line":229,"column":18}},{"start":{"line":229,"column":22},"end":{"line":229,"column":42}}]},"15":{"line":232,"type":"binary-expr","locations":[{"start":{"line":232,"column":11},"end":{"line":232,"column":33}},{"start":{"line":232,"column":37},"end":{"line":232,"column":49}}]},"16":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":2},"end":{"line":241,"column":2}},{"start":{"line":241,"column":2},"end":{"line":241,"column":2}}]},"17":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":6},"end":{"line":241,"column":16}},{"start":{"line":241,"column":21},"end":{"line":241,"column":43}},{"start":{"line":241,"column":47},"end":{"line":241,"column":64}},{"start":{"line":241,"column":68},"end":{"line":241,"column":78}}]},"18":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"19":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":2},"end":{"line":250,"column":2}},{"start":{"line":250,"column":2},"end":{"line":250,"column":2}}]},"20":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":2},"end":{"line":254,"column":2}},{"start":{"line":254,"column":2},"end":{"line":254,"column":2}}]},"21":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":2},"end":{"line":255,"column":2}},{"start":{"line":255,"column":2},"end":{"line":255,"column":2}}]},"22":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":2},"end":{"line":256,"column":2}},{"start":{"line":256,"column":2},"end":{"line":256,"column":2}}]},"23":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]},"24":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":2},"end":{"line":258,"column":2}},{"start":{"line":258,"column":2},"end":{"line":258,"column":2}}]},"25":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":2},"end":{"line":262,"column":2}},{"start":{"line":262,"column":2},"end":{"line":262,"column":2}}]},"26":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":9},"end":{"line":264,"column":9}},{"start":{"line":264,"column":9},"end":{"line":264,"column":9}}]},"27":{"line":264,"type":"binary-expr","locations":[{"start":{"line":264,"column":13},"end":{"line":264,"column":43}},{"start":{"line":264,"column":47},"end":{"line":264,"column":65}}]},"28":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":12},"end":{"line":269,"column":30}},{"start":{"line":269,"column":34},"end":{"line":269,"column":84}}]}},"code":["// Copyright 2013 Bowery Software, LLC","/**"," * @fileoverview Graph relation builder."," */","","","// Module Dependencies.","var assert = require('assert')","var util = require('util')","var Builder = require('./builder')","","","/**"," * @constructor"," */","function GraphBuilder () {}","","","util.inherits(GraphBuilder, Builder)","","","/**"," * Get a relationship."," * @return {GraphBuilder}"," */","GraphBuilder.prototype.get = function () {","  this._method = 'get'","  return this","}","","","/**"," * Create new relationship."," * @return {GraphBuilder}"," */","GraphBuilder.prototype.create = function () {","  this._method = 'put'","  return this","}","","","/**"," * Set graph data."," * @param {Object} data"," * @return {GraphBuilder}"," */","GraphBuilder.prototype.data = function (data) {","  assert(data, 'Data required.')","  this.data = data","  return this","}","","","/**"," * Set \"If-Match\" header to the given ref value."," * @param {String|boolean} ref. String ref for conditional update, or false"," *        for insert-if-absent (ie fail create if already present)"," * @return {GraphBuilder}"," */","GraphBuilder.prototype.ref = function (ref) {","  assert(typeof ref === 'string' || typeof ref === 'boolean', 'Ref required.')","  this.ref = ref","  return this","}","","","/**"," * Delete a relationship."," * @return {GraphBuilder}"," */","GraphBuilder.prototype.remove = function () {","  this._method = 'del'","  return this","}","","","/**"," * Set graph origin."," * @param {string} collection"," * @param {string} key"," * @return {GraphBuilder}"," */","GraphBuilder.prototype.from = function (collection, key) {","  assert(collection && key, 'Collection and key required.')","  this.collection = collection","  this.key = key","  return this","}","","/**"," * Enable field-filtering, with a whitelist of field names"," * @example"," * // adds a whitelist field-filter for the field value.age"," * graphBuilder.withFields('value.age');"," * @example"," * // adds two whitelist field-filters, for the fields value.name and value.age"," * graphBuilder.withFields('value.name', 'value.age');"," * @param {...string} fieldNames Fully-qualified field names to use as whitelist field-filters"," * @return {GraphBuilder}"," */","GraphBuilder.prototype.withFields = function () {","  this.filterWithFields = this.filterWithFields || [];","  this.filterWithFields = this.filterWithFields.concat(Array.prototype.slice.call(arguments));","  return this;","}","","/**"," * Enable field-filtering, with a blacklist of field names"," * @example"," * // adds a blacklist field-filter for the field value.age"," * graphBuilder.withoutFields('value.age');"," * @example"," * // adds two blacklist field-filters, for the fields value.name and value.age"," * graphBuilder.withoutFields('value.name', 'value.age');"," * @param {...string} fieldNames Fully-qualified field names to use as blacklist field-filters"," * @return {GraphBuilder}"," */","GraphBuilder.prototype.withoutFields = function () {","  this.filterWithoutFields = this.filterWithoutFields || [];","  this.filterWithoutFields = this.filterWithoutFields.concat(Array.prototype.slice.call(arguments));","  return this;","}","","","/**"," * Set graph relation."," * @param {string} kind"," * @return {GraphBuilder}"," */","GraphBuilder.prototype.related = function (kind) {","  assert(kind, 'Kind of relation required.')","","  // Hoist the kind argument into an array.","  if (util.isArray(kind)) {","    this.kind = kind;","  } else {","    this.kind = Array.prototype.slice.call(arguments, 0)","  }","","  // Make sure that the kind array is non-empty, and that its elements are non-empty strings.","  assert(this.kind.length > 0, 'Kind of relation required.')","  for (var i = 0; i < this.kind.length; i++) {","    var k = this.kind[i];","    assert(typeof(k) === \"string\" && k.length > 0, 'Kind must be a non-empty string')","  }","","  // Call the execute method in any of these scenarios:","  // (1) This is a read-only GraphBuilder, with toCollection & toKey empty. The execute","  //     function will list (GET) all related items for the collection & key.","  // (2) This is a read-only GraphBuilder, with toCollection & toKey non-empty. The","  //     execute function will retrieve (GET) the data of a specific relationship.","  // (3) This is a write-only GraphBuilder, with toCollection & toKey non-empty. The","  //     execute function will submit (PUT) a new relationship.","  if (!this.write || (this.toCollection && this.toKey)) {","    return this._execute(this._method)","  }","  // Without toCollection and toKey on this write-only GraphBuilder, just return","  // the builder, since there are still missing params.","  return this","}","","","/**"," * Set graph destination."," * @param {string} toCollection"," * @param {string} toKey"," * @return {Object}"," */","GraphBuilder.prototype.to = function (toCollection, toKey) {","  assert(toCollection && toKey, 'toCollection and toKey required.')","  this.toCollection = toCollection","  this.toKey = toKey","","  // Call the execute method only if the relationship kind has already been set.","  // Otherwise, just return the builder, since there ae still missing params.","  if (this.kind) {","    return this._execute(this._method)","  }","  return this","}","","","/**"," * Set graph result limit."," * @param {Number} limit"," * @return {Object}"," */","GraphBuilder.prototype.limit = function (limit) {","  assert(limit || limit == 0, 'Limit required.')","  this.limit_value = limit","  return this","}","","","/**"," * Set graph result offset."," * @param {Number} offset"," * @return {Object}"," */","GraphBuilder.prototype.offset = function (offset) {","  assert.equal(typeof offset, 'number', 'Offset required.')","  this.offset_value = offset","  return this","}","","","/**"," * Quote the provided string if not already quoted."," * @param {string} str"," * @return {string}"," * @protected"," */","GraphBuilder.prototype._quote = function (str) {","  return str.charAt(0) == '\"' ? str : '\"' + str + '\"'","}","","","/**"," * Execute graph read/write."," * @param {string} method"," * @return {Object}"," * @protected"," */","GraphBuilder.prototype._execute = function (method) {","  // Make sure we have a from item key","  assert(this.collection && this.key, \"'from' collection and key required.\")","","  // Make sure that the kind array is non-empty, and that its elements are non-empty strings.","  assert(this.kind && this.kind.length > 0, 'Kind of relation required.')","  for (var i = 0; i < this.kind.length; i++) {","    var k = this.kind[i];","    assert(typeof(k) === \"string\" && k.length > 0, 'Kind must be a non-empty string')","  }","","  // Create an array of path components.","  var pathArgs = []","  pathArgs.push(this.collection)","  pathArgs.push(this.key)","  // The 'relation' path component is used for creating and retrieving individual relations.","  // The 'relations' path component is used for traversing single-hop or multi-hop relationships.","  if (this.write || (this._method === \"get\" && this.toCollection && this.toKey)) {","    pathArgs.push('relation')","  } else {","    pathArgs.push('relations')","  }","  pathArgs = pathArgs.concat(this.kind)","","  // Destination collection and key are only mandatory during PUT and (non-listing) GET.","  if (this.toCollection) pathArgs.push(this.toCollection)","  if (this.toKey) pathArgs.push(this.toKey)","","  // Build the querystring","  var query = {}","  if (this._method == 'del') query['purge'] = true","  if (this.limit_value)      query['limit'] = this.limit_value","  if (this.offset_value)     query['offset'] = this.offset_value","  if (this.filterWithFields)      query['with_fields'] = this.filterWithFields","  if (this.filterWithoutFields)   query['without_fields'] = this.filterWithoutFields","","  // Build headers","  var header = {}","  if (typeof(this.ref) === 'string') {","    header['If-Match'] = this._quote(this.ref)","  } else if (typeof(this.ref) === 'boolean' && this.ref === false) {","    header['If-None-Match'] = '\"*\"'","  }","","  // Build the URL and return a callable delegate for this request","  var url = this.getDelegate() && this.getDelegate().generateApiUrl(pathArgs, query)","  return this.getDelegate()['_' + this._method](url, this.data, header)","}","","","// Module Exports.","module.exports = GraphBuilder",""],"l":{"8":1,"9":1,"10":1,"16":1,"19":1,"26":1,"27":0,"28":0,"36":1,"37":0,"38":0,"47":1,"48":0,"49":0,"50":0,"60":1,"61":0,"62":0,"63":0,"71":1,"72":0,"73":0,"83":1,"84":0,"85":0,"86":0,"87":0,"101":1,"102":0,"103":0,"104":0,"118":1,"119":0,"120":0,"121":0,"130":1,"131":0,"134":0,"135":0,"137":0,"141":0,"142":0,"143":0,"144":0,"154":0,"155":0,"159":0,"169":1,"170":0,"171":0,"172":0,"176":0,"177":0,"179":0,"188":1,"189":0,"190":0,"191":0,"200":1,"201":0,"202":0,"203":0,"213":1,"214":0,"224":1,"226":0,"229":0,"230":0,"231":0,"232":0,"236":0,"237":0,"238":0,"241":0,"242":0,"244":0,"246":0,"249":0,"250":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"261":0,"262":0,"263":0,"264":0,"265":0,"269":0,"270":0,"275":1}},"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/lib/event.js":{"path":"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/lib/event.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"EventBuilder","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":25}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":30},"end":{"line":26,"column":57}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":30},"end":{"line":39,"column":46}}},"4":{"name":"(anonymous_4)","line":51,"loc":{"start":{"line":51,"column":31},"end":{"line":51,"column":47}}},"5":{"name":"(anonymous_5)","line":64,"loc":{"start":{"line":64,"column":29},"end":{"line":64,"column":45}}},"6":{"name":"(anonymous_6)","line":77,"loc":{"start":{"line":77,"column":30},"end":{"line":77,"column":46}}},"7":{"name":"(anonymous_7)","line":89,"loc":{"start":{"line":89,"column":33},"end":{"line":89,"column":50}}},"8":{"name":"(anonymous_8)","line":101,"loc":{"start":{"line":101,"column":30},"end":{"line":101,"column":46}}},"9":{"name":"(anonymous_9)","line":113,"loc":{"start":{"line":113,"column":31},"end":{"line":113,"column":48}}},"10":{"name":"(anonymous_10)","line":125,"loc":{"start":{"line":125,"column":29},"end":{"line":125,"column":44}}},"11":{"name":"(anonymous_11)","line":136,"loc":{"start":{"line":136,"column":29},"end":{"line":136,"column":41}}},"12":{"name":"(anonymous_12)","line":149,"loc":{"start":{"line":149,"column":30},"end":{"line":149,"column":42}}},"13":{"name":"(anonymous_13)","line":161,"loc":{"start":{"line":161,"column":32},"end":{"line":161,"column":44}}},"14":{"name":"(anonymous_14)","line":173,"loc":{"start":{"line":173,"column":32},"end":{"line":173,"column":44}}},"15":{"name":"(anonymous_15)","line":188,"loc":{"start":{"line":188,"column":32},"end":{"line":188,"column":44}}},"16":{"name":"(anonymous_16)","line":208,"loc":{"start":{"line":208,"column":36},"end":{"line":208,"column":48}}},"17":{"name":"(anonymous_17)","line":225,"loc":{"start":{"line":225,"column":39},"end":{"line":225,"column":51}}},"18":{"name":"(anonymous_18)","line":238,"loc":{"start":{"line":238,"column":34},"end":{"line":238,"column":52}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"4":{"start":{"line":17,"column":0},"end":{"line":17,"column":47}},"5":{"start":{"line":26,"column":0},"end":{"line":31,"column":1}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":59}},"7":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"8":{"start":{"line":29,"column":2},"end":{"line":29,"column":16}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":13}},"10":{"start":{"line":39,"column":0},"end":{"line":43,"column":1}},"11":{"start":{"line":40,"column":2},"end":{"line":40,"column":32}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":18}},"13":{"start":{"line":42,"column":2},"end":{"line":42,"column":13}},"14":{"start":{"line":51,"column":0},"end":{"line":56,"column":1}},"15":{"start":{"line":52,"column":2},"end":{"line":52,"column":43}},"16":{"start":{"line":53,"column":2},"end":{"line":53,"column":68}},"17":{"start":{"line":54,"column":2},"end":{"line":54,"column":23}},"18":{"start":{"line":55,"column":2},"end":{"line":55,"column":13}},"19":{"start":{"line":64,"column":0},"end":{"line":69,"column":1}},"20":{"start":{"line":65,"column":2},"end":{"line":65,"column":43}},"21":{"start":{"line":66,"column":2},"end":{"line":66,"column":68}},"22":{"start":{"line":67,"column":2},"end":{"line":67,"column":21}},"23":{"start":{"line":68,"column":2},"end":{"line":68,"column":13}},"24":{"start":{"line":77,"column":0},"end":{"line":81,"column":1}},"25":{"start":{"line":78,"column":2},"end":{"line":78,"column":68}},"26":{"start":{"line":79,"column":2},"end":{"line":79,"column":23}},"27":{"start":{"line":80,"column":2},"end":{"line":80,"column":13}},"28":{"start":{"line":89,"column":0},"end":{"line":93,"column":1}},"29":{"start":{"line":90,"column":2},"end":{"line":90,"column":101}},"30":{"start":{"line":91,"column":2},"end":{"line":91,"column":20}},"31":{"start":{"line":92,"column":2},"end":{"line":92,"column":13}},"32":{"start":{"line":101,"column":0},"end":{"line":105,"column":1}},"33":{"start":{"line":102,"column":2},"end":{"line":102,"column":32}},"34":{"start":{"line":103,"column":2},"end":{"line":103,"column":18}},"35":{"start":{"line":104,"column":2},"end":{"line":104,"column":13}},"36":{"start":{"line":113,"column":0},"end":{"line":117,"column":1}},"37":{"start":{"line":114,"column":2},"end":{"line":114,"column":34}},"38":{"start":{"line":115,"column":2},"end":{"line":115,"column":26}},"39":{"start":{"line":116,"column":2},"end":{"line":116,"column":13}},"40":{"start":{"line":125,"column":0},"end":{"line":129,"column":1}},"41":{"start":{"line":126,"column":2},"end":{"line":126,"column":30}},"42":{"start":{"line":127,"column":2},"end":{"line":127,"column":22}},"43":{"start":{"line":128,"column":2},"end":{"line":128,"column":13}},"44":{"start":{"line":136,"column":0},"end":{"line":143,"column":1}},"45":{"start":{"line":137,"column":2},"end":{"line":137,"column":49}},"46":{"start":{"line":138,"column":2},"end":{"line":138,"column":35}},"47":{"start":{"line":139,"column":2},"end":{"line":139,"column":37}},"48":{"start":{"line":140,"column":2},"end":{"line":140,"column":47}},"49":{"start":{"line":141,"column":2},"end":{"line":141,"column":41}},"50":{"start":{"line":142,"column":2},"end":{"line":142,"column":29}},"51":{"start":{"line":149,"column":0},"end":{"line":154,"column":1}},"52":{"start":{"line":150,"column":2},"end":{"line":150,"column":49}},"53":{"start":{"line":151,"column":2},"end":{"line":151,"column":35}},"54":{"start":{"line":152,"column":2},"end":{"line":152,"column":37}},"55":{"start":{"line":153,"column":2},"end":{"line":153,"column":30}},"56":{"start":{"line":161,"column":0},"end":{"line":166,"column":1}},"57":{"start":{"line":162,"column":2},"end":{"line":162,"column":49}},"58":{"start":{"line":163,"column":2},"end":{"line":163,"column":35}},"59":{"start":{"line":164,"column":2},"end":{"line":164,"column":37}},"60":{"start":{"line":165,"column":2},"end":{"line":165,"column":30}},"61":{"start":{"line":173,"column":0},"end":{"line":181,"column":1}},"62":{"start":{"line":174,"column":2},"end":{"line":174,"column":49}},"63":{"start":{"line":175,"column":2},"end":{"line":175,"column":35}},"64":{"start":{"line":176,"column":2},"end":{"line":176,"column":37}},"65":{"start":{"line":177,"column":2},"end":{"line":177,"column":47}},"66":{"start":{"line":178,"column":2},"end":{"line":178,"column":41}},"67":{"start":{"line":179,"column":2},"end":{"line":179,"column":37}},"68":{"start":{"line":180,"column":2},"end":{"line":180,"column":29}},"69":{"start":{"line":188,"column":0},"end":{"line":195,"column":1}},"70":{"start":{"line":189,"column":2},"end":{"line":189,"column":49}},"71":{"start":{"line":190,"column":2},"end":{"line":190,"column":35}},"72":{"start":{"line":191,"column":2},"end":{"line":191,"column":37}},"73":{"start":{"line":192,"column":2},"end":{"line":192,"column":47}},"74":{"start":{"line":193,"column":2},"end":{"line":193,"column":41}},"75":{"start":{"line":194,"column":2},"end":{"line":194,"column":29}},"76":{"start":{"line":208,"column":0},"end":{"line":212,"column":1}},"77":{"start":{"line":209,"column":2},"end":{"line":209,"column":54}},"78":{"start":{"line":210,"column":2},"end":{"line":210,"column":94}},"79":{"start":{"line":211,"column":2},"end":{"line":211,"column":14}},"80":{"start":{"line":225,"column":0},"end":{"line":229,"column":1}},"81":{"start":{"line":226,"column":2},"end":{"line":226,"column":60}},"82":{"start":{"line":227,"column":2},"end":{"line":227,"column":100}},"83":{"start":{"line":228,"column":2},"end":{"line":228,"column":14}},"84":{"start":{"line":238,"column":0},"end":{"line":258,"column":1}},"85":{"start":{"line":239,"column":2},"end":{"line":239,"column":77}},"86":{"start":{"line":240,"column":2},"end":{"line":240,"column":17}},"87":{"start":{"line":241,"column":2},"end":{"line":241,"column":45}},"88":{"start":{"line":241,"column":24},"end":{"line":241,"column":45}},"89":{"start":{"line":242,"column":2},"end":{"line":255,"column":3}},"90":{"start":{"line":243,"column":4},"end":{"line":243,"column":73}},"91":{"start":{"line":243,"column":26},"end":{"line":243,"column":73}},"92":{"start":{"line":244,"column":4},"end":{"line":244,"column":55}},"93":{"start":{"line":244,"column":26},"end":{"line":244,"column":55}},"94":{"start":{"line":245,"column":4},"end":{"line":245,"column":51}},"95":{"start":{"line":245,"column":26},"end":{"line":245,"column":51}},"96":{"start":{"line":247,"column":4},"end":{"line":247,"column":66}},"97":{"start":{"line":247,"column":26},"end":{"line":247,"column":66}},"98":{"start":{"line":248,"column":4},"end":{"line":248,"column":64}},"99":{"start":{"line":248,"column":26},"end":{"line":248,"column":64}},"100":{"start":{"line":249,"column":4},"end":{"line":249,"column":62}},"101":{"start":{"line":249,"column":26},"end":{"line":249,"column":62}},"102":{"start":{"line":250,"column":4},"end":{"line":250,"column":64}},"103":{"start":{"line":250,"column":26},"end":{"line":250,"column":64}},"104":{"start":{"line":251,"column":4},"end":{"line":251,"column":65}},"105":{"start":{"line":251,"column":26},"end":{"line":251,"column":65}},"106":{"start":{"line":252,"column":4},"end":{"line":252,"column":80}},"107":{"start":{"line":252,"column":35},"end":{"line":252,"column":80}},"108":{"start":{"line":253,"column":4},"end":{"line":253,"column":86}},"109":{"start":{"line":253,"column":35},"end":{"line":253,"column":86}},"110":{"start":{"line":254,"column":4},"end":{"line":254,"column":18}},"111":{"start":{"line":256,"column":2},"end":{"line":256,"column":84}},"112":{"start":{"line":257,"column":2},"end":{"line":257,"column":65}},"113":{"start":{"line":262,"column":0},"end":{"line":262,"column":29}}},"branchMap":{"1":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":9},"end":{"line":27,"column":19}},{"start":{"line":27,"column":23},"end":{"line":27,"column":26}}]},"2":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":9},"end":{"line":53,"column":13}},{"start":{"line":53,"column":17},"end":{"line":53,"column":40}}]},"3":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":9},"end":{"line":66,"column":13}},{"start":{"line":66,"column":17},"end":{"line":66,"column":40}}]},"4":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":9},"end":{"line":78,"column":13}},{"start":{"line":78,"column":17},"end":{"line":78,"column":40}}]},"5":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":26},"end":{"line":209,"column":47}},{"start":{"line":209,"column":51},"end":{"line":209,"column":53}}]},"6":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":29},"end":{"line":226,"column":53}},{"start":{"line":226,"column":57},"end":{"line":226,"column":59}}]},"7":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":2},"end":{"line":241,"column":2}},{"start":{"line":241,"column":2},"end":{"line":241,"column":2}}]},"8":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":2},"end":{"line":242,"column":2}},{"start":{"line":242,"column":2},"end":{"line":242,"column":2}}]},"9":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":4},"end":{"line":243,"column":4}},{"start":{"line":243,"column":4},"end":{"line":243,"column":4}}]},"10":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":4},"end":{"line":244,"column":4}},{"start":{"line":244,"column":4},"end":{"line":244,"column":4}}]},"11":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":245,"column":4}},{"start":{"line":245,"column":4},"end":{"line":245,"column":4}}]},"12":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":4},"end":{"line":247,"column":4}},{"start":{"line":247,"column":4},"end":{"line":247,"column":4}}]},"13":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":4},"end":{"line":248,"column":4}},{"start":{"line":248,"column":4},"end":{"line":248,"column":4}}]},"14":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":4},"end":{"line":249,"column":4}},{"start":{"line":249,"column":4},"end":{"line":249,"column":4}}]},"15":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]},"16":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":4},"end":{"line":251,"column":4}},{"start":{"line":251,"column":4},"end":{"line":251,"column":4}}]},"17":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":4},"end":{"line":252,"column":4}},{"start":{"line":252,"column":4},"end":{"line":252,"column":4}}]},"18":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":4},"end":{"line":253,"column":4}},{"start":{"line":253,"column":4},"end":{"line":253,"column":4}}]},"19":{"line":256,"type":"binary-expr","locations":[{"start":{"line":256,"column":12},"end":{"line":256,"column":30}},{"start":{"line":256,"column":34},"end":{"line":256,"column":84}}]}},"code":["// Copyright 2013 Bowery Software, LLC","/**"," * @fileoverview Event builder."," */","","","// Module Dependencies.","var assert = require('assert')","var Builder = require('./builder')","","/**"," * @constructor"," */","function EventBuilder () {}","","","require('util').inherits(EventBuilder, Builder)","","","/**"," * Set event origin."," * @param {string} collection"," * @param {string} key"," * @return {EventBuilder}"," */","EventBuilder.prototype.from = function (collection, key) {","  assert(collection && key, 'Collection and key required.')","  this.collection = collection","  this.key = key","  return this","}","","","/**"," * Set event type."," * @param {string} type"," * @return {EventBuilder}"," */","EventBuilder.prototype.type = function (type) {","  assert(type, 'Type required.')","  this.type = type","  return this","}","","","/**"," * Set time range start."," * @param {number} time"," * @return {EventBuilder}"," */","EventBuilder.prototype.start = function (time) {","  assert(!this.write, 'Invalid operation.')","  assert(time && typeof time == 'number', 'Time required (number).')","  this.startTime = time","  return this","}","","","/**"," * Set time range end."," * @param {number} time"," * @return {EventBuilder}"," */","EventBuilder.prototype.end = function (time) {","  assert(!this.write, 'Invalid operation.')","  assert(time && typeof time == 'number', 'Time required (number).')","  this.endTime = time","  return this","}","","","/**"," * Set event timestamp."," * @param {number} time"," * @return {EventBuilder}"," */","EventBuilder.prototype.time = function (time) {","  assert(time && typeof time == 'number', 'Time required (number).')","  this.timestamp = time","  return this","}","","","/**"," * Set event ordinal."," * @param {number} order"," * @return {EventBuilder}"," */","EventBuilder.prototype.ordinal = function (order) {","  assert(['number', 'string'].indexOf(typeof(order)) !== -1, 'Ordinal must be a number or a string.')","  this.order = order","  return this","}","","","/**"," * Set event data."," * @param {Object} data"," * @return {EventBuilder}"," */","EventBuilder.prototype.data = function (data) {","  assert(data, 'Data required.')","  this.data = data","  return this","}","","","/**"," * Set event limit."," * @param {Number} limit"," * @return {EventBuilder}"," */","EventBuilder.prototype.limit = function (limit) {","  assert(limit, 'Limit required.')","  this.limit_value = limit","  return this","}","","","/**"," * Set \"If-Match\" header to the given ref value."," * @param {String} ref"," * @return {EventBuilder}"," */","EventBuilder.prototype.ref = function (ref) {","  assert(ref, 'Ref required.')","  this.ref_value = ref","  return this","}","","","/**"," * Get an event."," * @return {Promise}"," */","EventBuilder.prototype.get = function () {","  assert(this.collection, 'Collection required.')","  assert(this.key, 'Key required.')","  assert(this.type, 'Type required.')","  assert(this.timestamp, 'Timestamp required.')","  assert(this.order, 'Ordinal required.')","  return this._execute('get')","}","","/**"," * List events."," * @return {Promise}"," */","EventBuilder.prototype.list = function () {","  assert(this.collection, 'Collection required.')","  assert(this.key, 'Key required.')","  assert(this.type, 'Type required.')","  return this._execute('list')","}","","","/**"," * Create an data."," * @return {Promise}"," */","EventBuilder.prototype.create = function () {","  assert(this.collection, 'Collection required.')","  assert(this.key, 'Key required.')","  assert(this.type, 'Type required.')","  return this._execute('post')","}","","","/**"," * Update an event."," * @return {Promise}"," */","EventBuilder.prototype.update = function () {","  assert(this.collection, 'Collection required.')","  assert(this.key, 'Key required.')","  assert(this.type, 'Type required.')","  assert(this.timestamp, 'Timestamp required.')","  assert(this.order, 'Ordinal required.')","  assert(this.data, 'Data required.')","  return this._execute('put')","}","","","/**"," * Delete an event."," * @return {Promise}"," */","EventBuilder.prototype.remove = function () {","  assert(this.collection, 'Collection required.')","  assert(this.key, 'Key required.')","  assert(this.type, 'Type required.')","  assert(this.timestamp, 'Timestamp required.')","  assert(this.order, 'Ordinal required.')","  return this._execute('del')","}","","/**"," * Enable field-filtering, with a whitelist of field names"," * @example"," * // adds a whitelist field-filter for the field value.age"," * eventBuilder.withFields('value.age');"," * @example"," * // adds two whitelist field-filters, for the fields value.name and value.age"," * eventBuilder.withFields('value.name', 'value.age');"," * @param {...string} fieldNames Fully-qualified field names to use as whitelist field-filters"," * @return {EventBuilder}"," */","EventBuilder.prototype.withFields = function () {","  this.filterWithFields = this.filterWithFields || [];","  this.filterWithFields = this.filterWithFields.concat(Array.prototype.slice.call(arguments));","  return this;","}","","/**"," * Enable field-filtering, with a blacklist of field names"," * @example"," * // adds a blacklist field-filter for the field value.age"," * eventBuilder.withoutFields('value.age');"," * @example"," * // adds two blacklist field-filters, for the fields value.name and value.age"," * eventBuilder.withoutFields('value.name', 'value.age');"," * @param {...string} fieldNames Fully-qualified field names to use as blacklist field-filters"," * @return {EventBuilder}"," */","EventBuilder.prototype.withoutFields = function () {","  this.filterWithoutFields = this.filterWithoutFields || [];","  this.filterWithoutFields = this.filterWithoutFields.concat(Array.prototype.slice.call(arguments));","  return this;","}","","","/**"," * Execute event read/write."," * @param {string} method"," * @return {Object}"," * @protected"," */","EventBuilder.prototype._execute = function (method) {","  var query = {}, pathArgs = [this.collection, this.key, 'events', this.type]","  var header = {}","  if (method === 'del') query['purge'] = true","  if (method !== 'list') {","    if (this.ref_value)   header['If-Match'] = '\"' + this.ref_value + '\"'","    if (this.timestamp)   pathArgs.push(this.timestamp)","    if (this.order)       pathArgs.push(this.order)","  } else {","    if (this.limit_value) query['limit'] =        this.limit_value","    if (this.afterTime)   query['afterEvent'] =   this.afterTime","    if (this.endTime)     query['endEvent'] =     this.endTime","    if (this.startTime)   query['startEvent'] =   this.startTime","    if (this.beforeTime)  query['beforeEvent'] =  this.beforeTime","    if (this.filterWithFields)     query['with_fields'] =  this.filterWithFields","    if (this.filterWithoutFields)  query['without_fields'] =  this.filterWithoutFields","    method = 'get'","  }","  var url = this.getDelegate() && this.getDelegate().generateApiUrl(pathArgs, query)","  return this.getDelegate()['_' + method](url, this.data, header)","}","","","// Module Exports.","module.exports = EventBuilder",""],"l":{"8":1,"9":1,"14":1,"17":1,"26":1,"27":0,"28":0,"29":0,"30":0,"39":1,"40":0,"41":0,"42":0,"51":1,"52":0,"53":0,"54":0,"55":0,"64":1,"65":0,"66":0,"67":0,"68":0,"77":1,"78":0,"79":0,"80":0,"89":1,"90":0,"91":0,"92":0,"101":1,"102":0,"103":0,"104":0,"113":1,"114":0,"115":0,"116":0,"125":1,"126":0,"127":0,"128":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"149":1,"150":0,"151":0,"152":0,"153":0,"161":1,"162":0,"163":0,"164":0,"165":0,"173":1,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"188":1,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"208":1,"209":0,"210":0,"211":0,"225":1,"226":0,"227":0,"228":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"256":0,"257":0,"262":1}},"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/lib/patch.js":{"path":"/home/travis/build/npmtest/node-npmtest-orchestrate/node_modules/orchestrate/lib/patch.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":1,"72":0,"73":0,"74":1,"75":0,"76":0,"77":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"PatchBuilder","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":29},"end":{"line":23,"column":52}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":32},"end":{"line":33,"column":48}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":33},"end":{"line":44,"column":56}}},"5":{"name":"(anonymous_5)","line":55,"loc":{"start":{"line":55,"column":30},"end":{"line":55,"column":52}}},"6":{"name":"(anonymous_6)","line":66,"loc":{"start":{"line":66,"column":30},"end":{"line":66,"column":52}}},"7":{"name":"(anonymous_7)","line":78,"loc":{"start":{"line":78,"column":30},"end":{"line":78,"column":61}}},"8":{"name":"(anonymous_8)","line":91,"loc":{"start":{"line":91,"column":33},"end":{"line":91,"column":56}}},"9":{"name":"(anonymous_9)","line":100,"loc":{"start":{"line":100,"column":29},"end":{"line":100,"column":52}}},"10":{"name":"(anonymous_10)","line":117,"loc":{"start":{"line":117,"column":30},"end":{"line":117,"column":53}}},"11":{"name":"(anonymous_11)","line":131,"loc":{"start":{"line":131,"column":32},"end":{"line":131,"column":55}}},"12":{"name":"(anonymous_12)","line":143,"loc":{"start":{"line":143,"column":31},"end":{"line":143,"column":54}}},"13":{"name":"(anonymous_13)","line":159,"loc":{"start":{"line":159,"column":31},"end":{"line":159,"column":67}}},"14":{"name":"(anonymous_14)","line":177,"loc":{"start":{"line":177,"column":33},"end":{"line":177,"column":56}}},"15":{"name":"(anonymous_15)","line":190,"loc":{"start":{"line":190,"column":32},"end":{"line":190,"column":50}}},"16":{"name":"(anonymous_16)","line":198,"loc":{"start":{"line":198,"column":31},"end":{"line":198,"column":48}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"3":{"start":{"line":10,"column":0},"end":{"line":14,"column":1}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":32}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":18}},"6":{"start":{"line":13,"column":2},"end":{"line":13,"column":17}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"8":{"start":{"line":23,"column":0},"end":{"line":27,"column":2}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":49}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":62}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}},"12":{"start":{"line":33,"column":0},"end":{"line":37,"column":2}},"13":{"start":{"line":34,"column":2},"end":{"line":34,"column":52}},"14":{"start":{"line":35,"column":2},"end":{"line":35,"column":49}},"15":{"start":{"line":36,"column":2},"end":{"line":36,"column":14}},"16":{"start":{"line":44,"column":0},"end":{"line":48,"column":2}},"17":{"start":{"line":45,"column":2},"end":{"line":45,"column":53}},"18":{"start":{"line":46,"column":2},"end":{"line":46,"column":66}},"19":{"start":{"line":47,"column":2},"end":{"line":47,"column":14}},"20":{"start":{"line":55,"column":0},"end":{"line":59,"column":2}},"21":{"start":{"line":56,"column":2},"end":{"line":56,"column":66}},"22":{"start":{"line":57,"column":2},"end":{"line":57,"column":61}},"23":{"start":{"line":58,"column":2},"end":{"line":58,"column":14}},"24":{"start":{"line":66,"column":0},"end":{"line":70,"column":2}},"25":{"start":{"line":67,"column":2},"end":{"line":67,"column":66}},"26":{"start":{"line":68,"column":2},"end":{"line":68,"column":61}},"27":{"start":{"line":69,"column":2},"end":{"line":69,"column":14}},"28":{"start":{"line":78,"column":0},"end":{"line":84,"column":2}},"29":{"start":{"line":79,"column":2},"end":{"line":79,"column":50}},"30":{"start":{"line":80,"column":2},"end":{"line":80,"column":56}},"31":{"start":{"line":81,"column":2},"end":{"line":81,"column":40}},"32":{"start":{"line":81,"column":23},"end":{"line":81,"column":40}},"33":{"start":{"line":82,"column":2},"end":{"line":82,"column":21}},"34":{"start":{"line":83,"column":2},"end":{"line":83,"column":14}},"35":{"start":{"line":91,"column":0},"end":{"line":93,"column":2}},"36":{"start":{"line":92,"column":2},"end":{"line":92,"column":38}},"37":{"start":{"line":100,"column":0},"end":{"line":109,"column":2}},"38":{"start":{"line":101,"column":2},"end":{"line":101,"column":49}},"39":{"start":{"line":102,"column":2},"end":{"line":105,"column":4}},"40":{"start":{"line":106,"column":2},"end":{"line":106,"column":30}},"41":{"start":{"line":106,"column":13},"end":{"line":106,"column":30}},"42":{"start":{"line":107,"column":2},"end":{"line":107,"column":21}},"43":{"start":{"line":108,"column":2},"end":{"line":108,"column":14}},"44":{"start":{"line":117,"column":0},"end":{"line":122,"column":2}},"45":{"start":{"line":118,"column":2},"end":{"line":118,"column":50}},"46":{"start":{"line":119,"column":2},"end":{"line":119,"column":66}},"47":{"start":{"line":120,"column":2},"end":{"line":120,"column":63}},"48":{"start":{"line":121,"column":2},"end":{"line":121,"column":14}},"49":{"start":{"line":131,"column":0},"end":{"line":136,"column":2}},"50":{"start":{"line":132,"column":2},"end":{"line":132,"column":52}},"51":{"start":{"line":133,"column":2},"end":{"line":133,"column":68}},"52":{"start":{"line":134,"column":2},"end":{"line":134,"column":65}},"53":{"start":{"line":135,"column":2},"end":{"line":135,"column":14}},"54":{"start":{"line":143,"column":0},"end":{"line":148,"column":2}},"55":{"start":{"line":144,"column":2},"end":{"line":144,"column":51}},"56":{"start":{"line":145,"column":2},"end":{"line":145,"column":67}},"57":{"start":{"line":146,"column":2},"end":{"line":146,"column":64}},"58":{"start":{"line":147,"column":2},"end":{"line":147,"column":14}},"59":{"start":{"line":159,"column":0},"end":{"line":169,"column":2}},"60":{"start":{"line":160,"column":2},"end":{"line":160,"column":54}},"61":{"start":{"line":161,"column":2},"end":{"line":161,"column":70}},"62":{"start":{"line":162,"column":2},"end":{"line":163,"column":65}},"63":{"start":{"line":164,"column":2},"end":{"line":164,"column":32}},"64":{"start":{"line":165,"column":2},"end":{"line":165,"column":55}},"65":{"start":{"line":166,"column":2},"end":{"line":166,"column":50}},"66":{"start":{"line":166,"column":28},"end":{"line":166,"column":50}},"67":{"start":{"line":167,"column":2},"end":{"line":167,"column":21}},"68":{"start":{"line":168,"column":2},"end":{"line":168,"column":14}},"69":{"start":{"line":177,"column":0},"end":{"line":179,"column":1}},"70":{"start":{"line":178,"column":2},"end":{"line":178,"column":39}},"71":{"start":{"line":190,"column":0},"end":{"line":193,"column":1}},"72":{"start":{"line":191,"column":2},"end":{"line":191,"column":34}},"73":{"start":{"line":192,"column":2},"end":{"line":192,"column":14}},"74":{"start":{"line":198,"column":0},"end":{"line":202,"column":2}},"75":{"start":{"line":199,"column":2},"end":{"line":199,"column":60}},"76":{"start":{"line":200,"column":2},"end":{"line":201,"column":47}},"77":{"start":{"line":206,"column":0},"end":{"line":206,"column":30}}},"branchMap":{"1":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":9},"end":{"line":56,"column":13}},{"start":{"line":56,"column":17},"end":{"line":56,"column":21}}]},"2":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":9},"end":{"line":67,"column":13}},{"start":{"line":67,"column":17},"end":{"line":67,"column":21}}]},"3":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"4":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"5":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":9},"end":{"line":162,"column":29}},{"start":{"line":162,"column":33},"end":{"line":162,"column":62}}]},"6":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":12},"end":{"line":164,"column":22}},{"start":{"line":164,"column":26},"end":{"line":164,"column":31}}]},"7":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]}},"code":["// Copyright 2014 Orchestrate, Inc.","","// Module Dependencies.","var assert = require('assert');","var Builder = require('./builder');","","/**"," * @constructor"," */","function PatchBuilder (collection, key) {","  this._collection = collection;","  this._key = key;","  this._ops = [];","}","","require('util').inherits(PatchBuilder, Builder);","","/**"," * Add a value at the given path in the JSON document"," * @param {string} path - JSON document path; delimited by periods or slashes"," * @param {Object} value - Value to store at the given path"," */","PatchBuilder.prototype.add = function (path, value) {","  assert(path, 'Add requires a path parameter.');","  this._ops.push({\"op\": \"add\", \"path\": path, \"value\": value});","  return this;","};","","/**"," * Remove a value from the given path in the JSON document"," * @param {string} path - JSON document path; delimited by periods or slashes"," */","PatchBuilder.prototype.remove = function (path) {","  assert(path, 'Remove requires a path parameter.');","  this._ops.push({\"op\": \"remove\", \"path\": path});","  return this;","};","","/**"," * Replace a value at the given path in the JSON document"," * @param {string} path - JSON document path; delimited by periods or slashes"," * @param {Object} value - Value to replace at the given {path}"," */","PatchBuilder.prototype.replace = function (path, value) {","  assert(path, 'Replace requires a path parameter.');","  this._ops.push({\"op\": \"replace\", \"path\": path, \"value\": value});","  return this;","};","","/**"," * Move a value at from one path in the JSON document to another path"," * @param {string} from - Source from which to move the value"," * @param {string} path - Destination document path for the value"," */","PatchBuilder.prototype.move = function (from, path) {","  assert(from && path, 'Move requires from and path parameters.');","  this._ops.push({\"op\": \"move\", \"from\": from, \"path\": path});","  return this;","};","","/**"," * Copy a value at from one path in the JSON document to another path"," * @param {string} from - Source path from which to copy the value"," * @param {string} path - Destination path for the value"," */","PatchBuilder.prototype.copy = function (from, path) {","  assert(from && path, 'Copy requires from and path parameters.');","  this._ops.push({\"op\": \"copy\", \"from\": from, \"path\": path});","  return this;","};","","/**"," * Test equality of a value at the specified JSON document path"," * @param {string} path - JSON document path; delimited by periods or slashes"," * @param {Object} value - Value to compare against"," * @param {boolean} negate - true if the test should be negated"," */","PatchBuilder.prototype.test = function (path, value, negate) {","  assert(path, 'Test requires a path parameter.');","  var op = {\"op\": \"test\", \"path\": path, \"value\": value};","  if (negate === true) op.negate = true;","  this._ops.push(op);","  return this;","};","","/**"," * Test NON-equality of a value at the specified JSON document path"," * @param {string} path - JSON document path; delimited by periods or slashes"," * @param {Object} value - Value to compare against"," */","PatchBuilder.prototype.testNot = function (path, value) {","  return this.test(path, value, true);","};","","/**"," * Increase the value at the specified JSON document path by the given number"," * @param {string} path - JSON document path; delimited by periods or slashes"," * @param {Object} value - Number by which to increase the value"," */","PatchBuilder.prototype.inc = function (path, value) {","  assert(path, 'Inc requires a path parameter.');","  var op = {","    op: \"inc\",","    path: path,","  };","  if (value) op.value = value;","  this._ops.push(op);","  return this;","};","","/**"," * Init the value at the specified JSON document path to the given value"," * ONLY if there isn't already a value there."," * @param {string} path - JSON document path; delimited by periods or slashes"," * @param {Object} value - Value to initialize the path to (if not present)."," */","PatchBuilder.prototype.init = function (path, value) {","  assert(path, 'Init requires a path parameter.');","  assert(value !== undefined, 'Init requires a value parameter.');","  this._ops.push({\"op\": \"init\", \"path\": path, \"value\": value});","  return this;","};","","/**"," * Append the given value to an Array at the specified JSON document path."," * If value is an Array, all items in the Array will be appended to the target"," * Array. Otherwise, the single value will be appended."," * @param {string} path - JSON document path; delimited by periods or slashes"," * @param {Object|Array} value - Value(s) to append to the Array."," */","PatchBuilder.prototype.append = function (path, value) {","  assert(path, 'Append requires a path parameter.');","  assert(value !== undefined, 'Append requires a value parameter.');","  this._ops.push({\"op\": \"append\", \"path\": path, \"value\": value});","  return this;","};","","/**"," * Merge the given value with an Object at the specified JSON document path."," * @param {string} path - JSON document path; delimited by periods or slashes"," * @param {Object|Array} value - Value to merge in."," */","PatchBuilder.prototype.merge = function (path, value) {","  assert(path, 'Merge requires a path parameter.');","  assert(value !== undefined, 'Merge requires a value parameter.');","  this._ops.push({\"op\": \"merge\", \"path\": path, \"value\": value});","  return this;","};","","/**"," * Apply the given value as a patch against an Object at the specified JSON document path."," * @param {string} path - JSON document path; delimited by periods or slashes"," * @param {PatchBuilder|Array} value - Patch ops to apply."," * @param {boolean} conditional - true if this nested patch op is conditional,"," *        meaning the test ops in this nested patch's ops list will only be used"," *        to determine whether the nested patch will be applied, but will not"," *        fail the overall patch operation."," */","PatchBuilder.prototype.patch = function (path, value, conditional) {","  assert(path, 'Patch Op requires a path parameter.');","  assert(value !== undefined, 'Patch Op requires a value parameter.');","  assert(Array.isArray(value) || value instanceof PatchBuilder,","    'Patch Op value must be an Array of ops or a PatchBuilder.');","  var ops = value._ops || value;","  var op = {\"op\": \"patch\", \"path\": path, \"value\": ops};","  if (conditional === true) op.conditional = true;","  this._ops.push(op);","  return this;","};","","/**"," * Convenience method for creating a conditional nested patch op. Just calls"," * PatchBuilder.prototype.patch with 'true' for the conditional argument."," * @param {string} path - JSON document path; delimited by periods or slashes"," * @param {PatchBuilder|Array} value - Patch ops to apply."," */","PatchBuilder.prototype.patchIf = function (path, value) {","  return this.patch(path, value, true);","}","","/**"," * Make this patch an 'upsert'. If the key does not exist in the collection,"," * it will be created as an empty Json Object, then the patch applied."," * Call with true or with no argument to enable upsert. The default behavior"," * is non-upsert, where the response will be 404 if trying to patch a key"," * that does not exist."," *"," * @param {boolean} upsert - true to make this patch an upsert."," */","PatchBuilder.prototype.upsert = function (upsert) {","  this._upsert = upsert !== false;","  return this;","}","","/**"," * return {Promise}"," */","PatchBuilder.prototype.apply = function (match) {","  assert(this.getDelegate(), 'No client delegate assigned');","  return this.getDelegate().patch(this._collection, this._key, this._ops,","    {match:match,upsert:this._upsert === true})","};","","","// Module Exports.","module.exports = PatchBuilder;",""],"l":{"4":1,"5":1,"10":1,"11":0,"12":0,"13":0,"16":1,"23":1,"24":0,"25":0,"26":0,"33":1,"34":0,"35":0,"36":0,"44":1,"45":0,"46":0,"47":0,"55":1,"56":0,"57":0,"58":0,"66":1,"67":0,"68":0,"69":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"91":1,"92":0,"100":1,"101":0,"102":0,"106":0,"107":0,"108":0,"117":1,"118":0,"119":0,"120":0,"121":0,"131":1,"132":0,"133":0,"134":0,"135":0,"143":1,"144":0,"145":0,"146":0,"147":0,"159":1,"160":0,"161":0,"162":0,"164":0,"165":0,"166":0,"167":0,"168":0,"177":1,"178":0,"190":1,"191":0,"192":0,"198":1,"199":0,"200":0,"206":1}}}